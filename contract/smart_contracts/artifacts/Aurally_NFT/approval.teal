#pragma version 8
intcblock 0 1 65536 32
bytecblock 0x 0x00 0x151f7c75 0x000461757261 0x068101 0x61757261
txn NumAppArgs
intc_0 // 0
==
bnz main_l16
txna ApplicationArgs 0
pushbytes 0x5e53f297 // "create_aura_tokens()(uint64,string,uint64)"
==
bnz main_l15
txna ApplicationArgs 0
pushbytes 0x2e4c9f45 // "register_creator(txn,string,string)(bool,bool,uint64,string,string,uint64)"
==
bnz main_l14
txna ApplicationArgs 0
pushbytes 0xfa759456 // "create_sound_nft(pay,string,string,string,string,string,uint64,string,uint64,string,string,string,uint64,asset,account)(uint64,string,uint64,string,string,string,uint64,string,uint64,string,string,string,address,bool,bool)"
==
bnz main_l13
txna ApplicationArgs 0
pushbytes 0x8c877e57 // "claim_created_sound(axfer,string,account,asset)(uint64,string,uint64,string,string,string,uint64,string,uint64,string,string,string,address,bool,bool)"
==
bnz main_l12
txna ApplicationArgs 0
pushbytes 0xc81396d3 // "create_art_nft(pay,string,string,string,string,string,string,uint64,asset,account)(uint64,string,string,string,string,string,uint64,uint64,address,address,bool,bool)"
==
bnz main_l11
txna ApplicationArgs 0
pushbytes 0x8e351ddc // "claim_created_art(axfer,string,account,asset)(uint64,string,string,string,string,string,uint64,uint64,address,address,bool,bool)"
==
bnz main_l10
txna ApplicationArgs 0
pushbytes 0xbdf85edf // "create_art_auction(pay,string,string,uint64,uint64,uint64,string)(address,string,string,uint64,uint64,uint64,string,uint64,address,bool)"
==
bnz main_l9
err
main_l9:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub createartauctioncaster_27
intc_1 // 1
return
main_l10:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub claimcreatedartcaster_26
intc_1 // 1
return
main_l11:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub createartnftcaster_25
intc_1 // 1
return
main_l12:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub claimcreatedsoundcaster_24
intc_1 // 1
return
main_l13:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub createsoundnftcaster_23
intc_1 // 1
return
main_l14:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub registercreatorcaster_14
intc_1 // 1
return
main_l15:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub createauratokenscaster_10
intc_1 // 1
return
main_l16:
txn OnCompletion
intc_0 // NoOp
==
bnz main_l22
txn OnCompletion
pushint 4 // UpdateApplication
==
bnz main_l21
txn OnCompletion
pushint 5 // DeleteApplication
==
bnz main_l20
err
main_l20:
txn ApplicationID
intc_0 // 0
!=
assert
callsub delete_1
intc_1 // 1
return
main_l21:
txn ApplicationID
intc_0 // 0
!=
assert
callsub update_0
intc_1 // 1
return
main_l22:
txn ApplicationID
intc_0 // 0
==
assert
intc_1 // 1
return

// update
update_0:
proto 0 0
txn Sender
global CreatorAddress
==
// unauthorized
assert
intc_1 // 1
return

// delete
delete_1:
proto 0 0
txn Sender
global CreatorAddress
==
// unauthorized
assert
intc_1 // 1
return

// create_aura_tokens
createauratokens_2:
proto 0 1
bytec_0 // ""
dupn 3
intc_0 // 0
bytec_3 // 0x000461757261
frame_bury 1
pushbytes 0x0003415552 // 0x0003415552
frame_bury 2
pushbytes 0x005268747470733a2f2f7265732e636c6f7564696e6172792e636f6d2f6465762d6d656469612f696d6167652f75706c6f61642f76313730333039313731302f417572616c6c795f415f703176326f622e706e67 // 0x005268747470733a2f2f7265732e636c6f7564696e6172792e636f6d2f6465762d6d656469612f696d6167652f75706c6f61642f76313730333039313731302f417572616c6c795f415f703176326f622e706e67
frame_bury 3
frame_dig 1
extract 2 0
box_len
store 1
store 0
load 1
!
bz createauratokens_2_l2
pushint 1000000000000 // 1000000000000
frame_bury 4
frame_dig 1
frame_dig 4
frame_dig 2
frame_dig 3
callsub bootstraptoken_9
frame_dig 1
extract 2 0
box_len
store 3
store 2
load 3
assert
createauratokens_2_l2:
frame_dig 1
extract 2 0
box_get
store 5
store 4
load 5
assert
load 4
frame_bury 0
retsub

// register_creator
registercreator_3:
proto 3 1
bytec_0 // ""
frame_dig -3
gtxns Sender
box_len
store 9
store 8
load 9
!
bz registercreator_3_l2
frame_dig -3
frame_dig -2
frame_dig -1
callsub createnftowner_11
registercreator_3_l2:
frame_dig -3
gtxns Sender
box_get
store 11
store 10
load 11
assert
load 10
frame_bury 0
retsub

// create_sound_nft
createsoundnft_4:
proto 15 1
bytec_0 // ""
dupn 2
intc_0 // 0
dupn 2
bytec_0 // ""
intc_0 // 0
dup
bytec_0 // ""
dup
intc_0 // 0
frame_dig -15
callsub ensurezeropayment_17
frame_dig -2
callsub ensureassetisaura_19
intc_0 // 0
store 12
createsoundnft_4_l1:
load 12
pushint 1000 // 1000
global MinTxnFee
/
<
bz createsoundnft_4_l3
itxn_begin
pushint 6 // appl
itxn_field TypeEnum
pushint 5 // DeleteApplication
itxn_field OnCompletion
bytec 4 // 0x068101
itxn_field ApprovalProgram
bytec 4 // 0x068101
itxn_field ClearStateProgram
itxn_submit
load 12
intc_1 // 1
+
store 12
b createsoundnft_4_l1
createsoundnft_4_l3:
pushbytes 0x00056d75736963 // 0x00056d75736963
frame_bury 1
frame_dig -15
frame_dig 1
callsub ensureregisteredcreative_22
frame_dig -1
txnas Accounts
frame_dig -15
gtxns Sender
==
// The creator must be the same as the transaction sender
assert
frame_dig -13
extract 2 0
box_len
store 14
store 13
load 14
!
// An asset with this key already exists
assert
frame_dig -15
gtxns Sender
frame_bury 2
frame_dig 2
len
intc_3 // 32
==
assert
itxn_begin
pushint 3 // acfg
itxn_field TypeEnum
frame_dig -14
extract 2 0
itxn_field ConfigAssetName
frame_dig -3
itxn_field ConfigAssetTotal
frame_dig -6
extract 2 0
itxn_field ConfigAssetURL
frame_dig 2
itxn_field ConfigAssetManager
itxn_submit
itxn CreatedAssetID
frame_bury 3
intc_1 // 1
frame_bury 4
intc_0 // 0
frame_bury 5
frame_dig 3
itob
frame_dig -13
frame_bury 10
frame_dig 10
frame_bury 9
pushint 81 // 81
frame_bury 7
frame_dig 7
frame_dig 10
len
+
frame_bury 8
frame_dig 8
intc_2 // 65536
<
assert
frame_dig 7
itob
extract 6 0
concat
frame_dig -3
itob
concat
frame_dig -12
frame_bury 10
frame_dig 9
frame_dig 10
concat
frame_bury 9
frame_dig 8
frame_bury 7
frame_dig 7
frame_dig 10
len
+
frame_bury 8
frame_dig 8
intc_2 // 65536
<
assert
frame_dig 7
itob
extract 6 0
concat
frame_dig -11
frame_bury 10
frame_dig 9
frame_dig 10
concat
frame_bury 9
frame_dig 8
frame_bury 7
frame_dig 7
frame_dig 10
len
+
frame_bury 8
frame_dig 8
intc_2 // 65536
<
assert
frame_dig 7
itob
extract 6 0
concat
frame_dig -10
frame_bury 10
frame_dig 9
frame_dig 10
concat
frame_bury 9
frame_dig 8
frame_bury 7
frame_dig 7
frame_dig 10
len
+
frame_bury 8
frame_dig 8
intc_2 // 65536
<
assert
frame_dig 7
itob
extract 6 0
concat
frame_dig -9
itob
concat
frame_dig -8
frame_bury 10
frame_dig 9
frame_dig 10
concat
frame_bury 9
frame_dig 8
frame_bury 7
frame_dig 7
frame_dig 10
len
+
frame_bury 8
frame_dig 8
intc_2 // 65536
<
assert
frame_dig 7
itob
extract 6 0
concat
frame_dig -7
itob
concat
frame_dig -6
frame_bury 10
frame_dig 9
frame_dig 10
concat
frame_bury 9
frame_dig 8
frame_bury 7
frame_dig 7
frame_dig 10
len
+
frame_bury 8
frame_dig 8
intc_2 // 65536
<
assert
frame_dig 7
itob
extract 6 0
concat
frame_dig -5
frame_bury 10
frame_dig 9
frame_dig 10
concat
frame_bury 9
frame_dig 8
frame_bury 7
frame_dig 7
frame_dig 10
len
+
frame_bury 8
frame_dig 8
intc_2 // 65536
<
assert
frame_dig 7
itob
extract 6 0
concat
frame_dig -4
frame_bury 10
frame_dig 9
frame_dig 10
concat
frame_bury 9
frame_dig 8
frame_bury 7
frame_dig 7
itob
extract 6 0
concat
frame_dig 2
concat
bytec_1 // 0x00
intc_0 // 0
frame_dig 4
setbit
intc_1 // 1
frame_dig 5
setbit
concat
frame_dig 9
concat
frame_bury 6
frame_dig -13
extract 2 0
box_del
pop
frame_dig -13
extract 2 0
frame_dig 6
box_put
frame_dig 2
callsub incrementcreatornftcount_12
intc_1 // 1
frame_bury 11
frame_dig 2
frame_dig 11
callsub sendauratoken_15
frame_dig -13
extract 2 0
box_get
store 16
store 15
load 16
assert
load 15
frame_bury 0
retsub

// claim_created_sound
claimcreatedsound_5:
proto 4 1
bytec_0 // ""
dup
intc_0 // 0
bytec_0 // ""
intc_0 // 0
bytec_0 // ""
dupn 2
intc_0 // 0
bytec_0 // ""
intc_0 // 0
bytec_0 // ""
dupn 3
intc_0 // 0
dupn 3
bytec_0 // ""
dup
frame_dig -3
callsub ensuresoundnftexists_20
frame_dig -3
extract 2 0
box_get
store 30
store 29
load 30
assert
load 29
frame_bury 1
frame_dig 1
intc_0 // 0
extract_uint64
frame_bury 2
frame_dig 1
frame_dig 1
pushint 8 // 8
extract_uint16
frame_dig 1
pushint 18 // 18
extract_uint16
substring3
frame_bury 3
frame_dig 1
pushint 10 // 10
extract_uint64
frame_bury 4
frame_dig 1
frame_dig 1
pushint 18 // 18
extract_uint16
frame_dig 1
pushint 20 // 20
extract_uint16
substring3
frame_bury 5
frame_dig 1
frame_dig 1
pushint 20 // 20
extract_uint16
frame_dig 1
pushint 22 // 22
extract_uint16
substring3
frame_bury 6
frame_dig 1
frame_dig 1
pushint 22 // 22
extract_uint16
frame_dig 1
intc_3 // 32
extract_uint16
substring3
frame_bury 7
frame_dig 1
pushint 24 // 24
extract_uint64
frame_bury 8
frame_dig 1
frame_dig 1
intc_3 // 32
extract_uint16
frame_dig 1
pushint 42 // 42
extract_uint16
substring3
frame_bury 9
frame_dig 1
pushint 34 // 34
extract_uint64
frame_bury 10
frame_dig 1
frame_dig 1
pushint 42 // 42
extract_uint16
frame_dig 1
pushint 44 // 44
extract_uint16
substring3
frame_bury 11
frame_dig 1
frame_dig 1
pushint 44 // 44
extract_uint16
frame_dig 1
pushint 46 // 46
extract_uint16
substring3
frame_bury 12
frame_dig 1
frame_dig 1
pushint 46 // 46
extract_uint16
dig 1
len
substring3
frame_bury 13
frame_dig 1
extract 48 32
frame_bury 14
frame_dig 1
pushint 640 // 640
getbit
frame_bury 15
frame_dig 1
pushint 641 // 641
getbit
frame_bury 16
frame_dig 16
!
// This art nft has already been claimed
assert
frame_dig 14
frame_dig -4
gtxns Sender
==
// This address is not the nft creator
assert
frame_dig -2
txnas Accounts
frame_dig 14
==
// The reciever must be the creator of the nft
assert
frame_dig -1
txnas Assets
frame_dig 2
==
// The asset must have the same asset_id as the nft
assert
frame_dig 2
frame_dig 4
frame_dig 14
callsub transferassetfromcontract_16
intc_1 // 1
frame_bury 16
frame_dig 2
itob
frame_dig 3
frame_bury 20
frame_dig 20
frame_bury 19
pushint 81 // 81
frame_bury 17
frame_dig 17
frame_dig 20
len
+
frame_bury 18
frame_dig 18
intc_2 // 65536
<
assert
frame_dig 17
itob
extract 6 0
concat
frame_dig 4
itob
concat
frame_dig 5
frame_bury 20
frame_dig 19
frame_dig 20
concat
frame_bury 19
frame_dig 18
frame_bury 17
frame_dig 17
frame_dig 20
len
+
frame_bury 18
frame_dig 18
intc_2 // 65536
<
assert
frame_dig 17
itob
extract 6 0
concat
frame_dig 6
frame_bury 20
frame_dig 19
frame_dig 20
concat
frame_bury 19
frame_dig 18
frame_bury 17
frame_dig 17
frame_dig 20
len
+
frame_bury 18
frame_dig 18
intc_2 // 65536
<
assert
frame_dig 17
itob
extract 6 0
concat
frame_dig 7
frame_bury 20
frame_dig 19
frame_dig 20
concat
frame_bury 19
frame_dig 18
frame_bury 17
frame_dig 17
frame_dig 20
len
+
frame_bury 18
frame_dig 18
intc_2 // 65536
<
assert
frame_dig 17
itob
extract 6 0
concat
frame_dig 8
itob
concat
frame_dig 9
frame_bury 20
frame_dig 19
frame_dig 20
concat
frame_bury 19
frame_dig 18
frame_bury 17
frame_dig 17
frame_dig 20
len
+
frame_bury 18
frame_dig 18
intc_2 // 65536
<
assert
frame_dig 17
itob
extract 6 0
concat
frame_dig 10
itob
concat
frame_dig 11
frame_bury 20
frame_dig 19
frame_dig 20
concat
frame_bury 19
frame_dig 18
frame_bury 17
frame_dig 17
frame_dig 20
len
+
frame_bury 18
frame_dig 18
intc_2 // 65536
<
assert
frame_dig 17
itob
extract 6 0
concat
frame_dig 12
frame_bury 20
frame_dig 19
frame_dig 20
concat
frame_bury 19
frame_dig 18
frame_bury 17
frame_dig 17
frame_dig 20
len
+
frame_bury 18
frame_dig 18
intc_2 // 65536
<
assert
frame_dig 17
itob
extract 6 0
concat
frame_dig 13
frame_bury 20
frame_dig 19
frame_dig 20
concat
frame_bury 19
frame_dig 18
frame_bury 17
frame_dig 17
itob
extract 6 0
concat
frame_dig 14
concat
bytec_1 // 0x00
intc_0 // 0
frame_dig 15
setbit
intc_1 // 1
frame_dig 16
setbit
concat
frame_dig 19
concat
frame_bury 1
frame_dig 3
extract 2 0
box_del
pop
frame_dig 3
extract 2 0
frame_dig 1
box_put
frame_dig 3
extract 2 0
box_get
store 32
store 31
load 32
assert
load 31
frame_bury 0
retsub

// create_art_nft
createartnft_6:
proto 10 1
bytec_0 // ""
dupn 2
intc_0 // 0
dupn 2
bytec_0 // ""
intc_0 // 0
bytec_0 // ""
intc_0 // 0
dup
bytec_0 // ""
dup
intc_0 // 0
frame_dig -10
callsub ensurezeropayment_17
frame_dig -2
callsub ensureassetisaura_19
frame_dig -1
txnas Accounts
frame_dig -10
gtxns Sender
==
// The creator must be the same as the transaction sender
assert
frame_dig -9
extract 2 0
box_len
store 36
store 35
load 36
!
// An art NFT with this key already exists
assert
pushbytes 0x0003617274 // 0x0003617274
frame_bury 1
frame_dig -10
frame_dig 1
callsub ensureregisteredcreative_22
frame_dig -10
gtxns Sender
frame_bury 2
frame_dig 2
len
intc_3 // 32
==
assert
itxn_begin
pushint 3 // acfg
itxn_field TypeEnum
frame_dig -8
extract 2 0
itxn_field ConfigAssetName
intc_1 // 1
itxn_field ConfigAssetTotal
frame_dig -4
extract 2 0
itxn_field ConfigAssetURL
frame_dig 2
itxn_field ConfigAssetManager
itxn_submit
itxn CreatedAssetID
frame_bury 3
intc_0 // 0
frame_bury 4
intc_1 // 1
frame_bury 5
global CurrentApplicationAddress
frame_bury 6
frame_dig 6
len
intc_3 // 32
==
assert
intc_0 // 0
frame_bury 7
frame_dig 3
itob
frame_dig -9
frame_bury 12
frame_dig 12
frame_bury 11
pushint 99 // 99
frame_bury 9
frame_dig 9
frame_dig 12
len
+
frame_bury 10
frame_dig 10
intc_2 // 65536
<
assert
frame_dig 9
itob
extract 6 0
concat
frame_dig -7
frame_bury 12
frame_dig 11
frame_dig 12
concat
frame_bury 11
frame_dig 10
frame_bury 9
frame_dig 9
frame_dig 12
len
+
frame_bury 10
frame_dig 10
intc_2 // 65536
<
assert
frame_dig 9
itob
extract 6 0
concat
frame_dig -6
frame_bury 12
frame_dig 11
frame_dig 12
concat
frame_bury 11
frame_dig 10
frame_bury 9
frame_dig 9
frame_dig 12
len
+
frame_bury 10
frame_dig 10
intc_2 // 65536
<
assert
frame_dig 9
itob
extract 6 0
concat
frame_dig -5
frame_bury 12
frame_dig 11
frame_dig 12
concat
frame_bury 11
frame_dig 10
frame_bury 9
frame_dig 9
frame_dig 12
len
+
frame_bury 10
frame_dig 10
intc_2 // 65536
<
assert
frame_dig 9
itob
extract 6 0
concat
frame_dig -4
frame_bury 12
frame_dig 11
frame_dig 12
concat
frame_bury 11
frame_dig 10
frame_bury 9
frame_dig 9
itob
extract 6 0
concat
frame_dig -3
itob
concat
frame_dig 4
itob
concat
frame_dig 2
concat
frame_dig 6
concat
bytec_1 // 0x00
intc_0 // 0
frame_dig 5
setbit
intc_1 // 1
frame_dig 7
setbit
concat
frame_dig 11
concat
frame_bury 8
frame_dig -9
extract 2 0
box_del
pop
frame_dig -9
extract 2 0
frame_dig 8
box_put
frame_dig 2
callsub incrementcreatornftcount_12
intc_1 // 1
frame_bury 13
frame_dig 2
frame_dig 13
callsub sendauratoken_15
frame_dig -9
extract 2 0
box_get
store 38
store 37
load 38
assert
load 37
frame_bury 0
retsub

// claim_created_art
claimcreatedart_7:
proto 4 1
bytec_0 // ""
dup
intc_0 // 0
bytec_0 // ""
dupn 4
intc_0 // 0
dup
bytec_0 // ""
dup
intc_0 // 0
dupn 4
bytec_0 // ""
dup
frame_dig -3
callsub ensureartnftexists_21
frame_dig -3
extract 2 0
box_get
store 40
store 39
load 40
assert
load 39
frame_bury 1
frame_dig 1
intc_0 // 0
extract_uint64
frame_bury 2
frame_dig 1
frame_dig 1
pushint 8 // 8
extract_uint16
frame_dig 1
pushint 10 // 10
extract_uint16
substring3
frame_bury 3
frame_dig 1
frame_dig 1
pushint 10 // 10
extract_uint16
frame_dig 1
pushint 12 // 12
extract_uint16
substring3
frame_bury 4
frame_dig 1
frame_dig 1
pushint 12 // 12
extract_uint16
frame_dig 1
pushint 14 // 14
extract_uint16
substring3
frame_bury 5
frame_dig 1
frame_dig 1
pushint 14 // 14
extract_uint16
frame_dig 1
pushint 16 // 16
extract_uint16
substring3
frame_bury 6
frame_dig 1
frame_dig 1
pushint 16 // 16
extract_uint16
dig 1
len
substring3
frame_bury 7
frame_dig 1
pushint 18 // 18
extract_uint64
frame_bury 8
frame_dig 1
pushint 26 // 26
extract_uint64
frame_bury 9
frame_dig 1
extract 34 32
frame_bury 10
frame_dig 1
extract 66 32
frame_bury 11
frame_dig 1
pushint 784 // 784
getbit
frame_bury 12
frame_dig 1
pushint 785 // 785
getbit
frame_bury 13
frame_dig 13
!
// This art nft has already been claimed
assert
frame_dig -2
txnas Accounts
frame_dig 10
==
// The reciever must be the creator of the nft
assert
frame_dig 10
frame_dig -4
gtxns Sender
==
// This address is not the nft creator
assert
frame_dig -1
txnas Assets
frame_dig 2
==
// The asset must have the same asset_id as the nft
assert
intc_1 // 1
frame_bury 14
frame_dig 2
frame_dig 14
frame_dig 10
callsub transferassetfromcontract_16
frame_dig -4
gtxns Sender
frame_bury 11
frame_dig 11
len
intc_3 // 32
==
assert
intc_1 // 1
frame_bury 13
frame_dig 2
itob
frame_dig 3
frame_bury 18
frame_dig 18
frame_bury 17
pushint 99 // 99
frame_bury 15
frame_dig 15
frame_dig 18
len
+
frame_bury 16
frame_dig 16
intc_2 // 65536
<
assert
frame_dig 15
itob
extract 6 0
concat
frame_dig 4
frame_bury 18
frame_dig 17
frame_dig 18
concat
frame_bury 17
frame_dig 16
frame_bury 15
frame_dig 15
frame_dig 18
len
+
frame_bury 16
frame_dig 16
intc_2 // 65536
<
assert
frame_dig 15
itob
extract 6 0
concat
frame_dig 5
frame_bury 18
frame_dig 17
frame_dig 18
concat
frame_bury 17
frame_dig 16
frame_bury 15
frame_dig 15
frame_dig 18
len
+
frame_bury 16
frame_dig 16
intc_2 // 65536
<
assert
frame_dig 15
itob
extract 6 0
concat
frame_dig 6
frame_bury 18
frame_dig 17
frame_dig 18
concat
frame_bury 17
frame_dig 16
frame_bury 15
frame_dig 15
frame_dig 18
len
+
frame_bury 16
frame_dig 16
intc_2 // 65536
<
assert
frame_dig 15
itob
extract 6 0
concat
frame_dig 7
frame_bury 18
frame_dig 17
frame_dig 18
concat
frame_bury 17
frame_dig 16
frame_bury 15
frame_dig 15
itob
extract 6 0
concat
frame_dig 8
itob
concat
frame_dig 9
itob
concat
frame_dig 10
concat
frame_dig 11
concat
bytec_1 // 0x00
intc_0 // 0
frame_dig 12
setbit
intc_1 // 1
frame_dig 13
setbit
concat
frame_dig 17
concat
frame_bury 1
frame_dig 3
extract 2 0
box_del
pop
frame_dig 3
extract 2 0
frame_dig 1
box_put
frame_dig 3
extract 2 0
box_get
store 42
store 41
load 42
assert
load 41
frame_bury 0
retsub

// create_art_auction
createartauction_8:
proto 7 1
bytec_0 // ""
dupn 3
frame_dig -6
extract 2 0
box_len
store 46
store 45
load 46
!
// An auction with this key already exists
assert
frame_dig -7
callsub ensurezeropayment_17
frame_dig -3
frame_dig -2
<
// End date must be greater that start date
assert
frame_dig -5
extract 2 0
box_len
store 48
store 47
load 48
// Art NFT with this key was not found
assert
frame_dig -5
extract 2 0
box_get
store 50
store 49
load 50
assert
load 49
frame_bury 1
frame_dig 1
extract 66 32
frame_bury 2
frame_dig 1
frame_dig 1
pushint 12 // 12
extract_uint16
frame_dig 1
pushint 14 // 14
extract_uint16
substring3
frame_bury 3
frame_dig 2
frame_dig -7
gtxns Sender
==
// Only the owner of this NFT can auction it
assert
frame_dig -7
frame_dig -6
frame_dig -5
frame_dig 3
frame_dig -1
frame_dig -4
frame_dig -3
frame_dig -2
callsub newartauction_13
frame_dig -6
extract 2 0
box_get
store 52
store 51
load 52
assert
load 51
frame_bury 0
retsub

// bootstrap_token
bootstraptoken_9:
proto 4 0
intc_0 // 0
bytec_0 // ""
intc_0 // 0
dup
bytec_0 // ""
dup
frame_dig -4
extract 2 0
box_len
store 7
store 6
load 7
!
// Aura tokens already exist
assert
itxn_begin
pushint 3 // acfg
itxn_field TypeEnum
frame_dig -3
itxn_field ConfigAssetTotal
frame_dig -4
extract 2 0
itxn_field ConfigAssetName
frame_dig -2
extract 2 0
itxn_field ConfigAssetUnitName
frame_dig -1
extract 2 0
itxn_field ConfigAssetURL
global CurrentApplicationAddress
itxn_field ConfigAssetFreeze
global CurrentApplicationAddress
itxn_field ConfigAssetManager
global CurrentApplicationAddress
itxn_field ConfigAssetReserve
global CurrentApplicationAddress
itxn_field ConfigAssetClawback
itxn_submit
itxn CreatedAssetID
frame_bury 0
frame_dig 0
itob
log
frame_dig 0
itob
frame_dig -4
frame_bury 5
frame_dig 5
frame_bury 4
pushint 18 // 18
frame_bury 2
frame_dig 2
itob
extract 6 0
concat
frame_dig -3
itob
concat
frame_dig 4
concat
frame_bury 1
frame_dig -4
extract 2 0
box_del
pop
frame_dig -4
extract 2 0
frame_dig 1
box_put
retsub

// create_aura_tokens_caster
createauratokenscaster_10:
proto 0 0
bytec_0 // ""
callsub createauratokens_2
frame_bury 0
bytec_2 // 0x151f7c75
frame_dig 0
concat
log
retsub

// create_nft_owner
createnftowner_11:
proto 3 0
intc_0 // 0
dupn 3
bytec_0 // ""
intc_0 // 0
dup
bytec_0 // ""
dup
itxn_begin
pushint 3 // acfg
itxn_field TypeEnum
frame_dig -3
gtxns Sender
itxn_field ConfigAssetName
global CurrentApplicationAddress
itxn_field ConfigAssetManager
intc_1 // 1
itxn_field ConfigAssetTotal
itxn_submit
itxn CreatedAssetID
frame_bury 0
intc_0 // 0
frame_bury 1
intc_0 // 0
frame_bury 2
intc_0 // 0
frame_bury 3
bytec_1 // 0x00
intc_0 // 0
frame_dig 1
setbit
intc_1 // 1
frame_dig 2
setbit
frame_dig 3
itob
concat
frame_dig -2
frame_bury 8
frame_dig 8
frame_bury 7
pushint 21 // 21
frame_bury 5
frame_dig 5
frame_dig 8
len
+
frame_bury 6
frame_dig 6
intc_2 // 65536
<
assert
frame_dig 5
itob
extract 6 0
concat
frame_dig -1
frame_bury 8
frame_dig 7
frame_dig 8
concat
frame_bury 7
frame_dig 6
frame_bury 5
frame_dig 5
itob
extract 6 0
concat
frame_dig 0
itob
concat
frame_dig 7
concat
frame_bury 4
frame_dig -3
gtxns Sender
box_del
pop
frame_dig -3
gtxns Sender
frame_dig 4
box_put
retsub

// increment_creator_nft_count
incrementcreatornftcount_12:
proto 1 0
bytec_0 // ""
intc_0 // 0
dupn 2
bytec_0 // ""
dup
intc_0 // 0
dupn 2
bytec_0 // ""
dup
frame_dig -1
box_get
store 18
store 17
load 18
assert
load 17
frame_bury 0
frame_dig 0
intc_1 // 1
extract_uint64
frame_bury 1
frame_dig 0
intc_0 // 0
getbit
frame_bury 2
frame_dig 0
intc_1 // 1
getbit
frame_bury 3
frame_dig 0
frame_dig 0
pushint 9 // 9
extract_uint16
frame_dig 0
pushint 11 // 11
extract_uint16
substring3
frame_bury 4
frame_dig 0
frame_dig 0
pushint 11 // 11
extract_uint16
dig 1
len
substring3
frame_bury 5
frame_dig 0
pushint 13 // 13
extract_uint64
frame_bury 6
frame_dig 1
intc_1 // 1
+
frame_bury 1
bytec_1 // 0x00
intc_0 // 0
frame_dig 2
setbit
intc_1 // 1
frame_dig 3
setbit
frame_dig 1
itob
concat
frame_dig 4
frame_bury 10
frame_dig 10
frame_bury 9
pushint 21 // 21
frame_bury 7
frame_dig 7
frame_dig 10
len
+
frame_bury 8
frame_dig 8
intc_2 // 65536
<
assert
frame_dig 7
itob
extract 6 0
concat
frame_dig 5
frame_bury 10
frame_dig 9
frame_dig 10
concat
frame_bury 9
frame_dig 8
frame_bury 7
frame_dig 7
itob
extract 6 0
concat
frame_dig 6
itob
concat
frame_dig 9
concat
frame_bury 0
frame_dig -1
box_del
pop
frame_dig -1
frame_dig 0
box_put
retsub

// new_art_auction
newartauction_13:
proto 8 0
bytec_0 // ""
intc_0 // 0
bytec_0 // ""
intc_0 // 0
bytec_0 // ""
intc_0 // 0
dup
bytec_0 // ""
dup
frame_dig -7
extract 2 0
box_len
store 54
store 53
load 54
!
// an art auction with this key already exists
assert
frame_dig -8
gtxns Sender
frame_bury 0
frame_dig 0
len
intc_3 // 32
==
assert
intc_0 // 0
frame_bury 1
global CurrentApplicationAddress
frame_bury 2
frame_dig 2
len
intc_3 // 32
==
assert
intc_0 // 0
frame_bury 3
frame_dig 0
frame_dig -6
frame_bury 8
frame_dig 8
frame_bury 7
pushint 103 // 103
frame_bury 5
frame_dig 5
frame_dig 8
len
+
frame_bury 6
frame_dig 6
intc_2 // 65536
<
assert
frame_dig 5
itob
extract 6 0
concat
frame_dig -5
frame_bury 8
frame_dig 7
frame_dig 8
concat
frame_bury 7
frame_dig 6
frame_bury 5
frame_dig 5
frame_dig 8
len
+
frame_bury 6
frame_dig 6
intc_2 // 65536
<
assert
frame_dig 5
itob
extract 6 0
concat
frame_dig -3
itob
concat
frame_dig -2
itob
concat
frame_dig -1
itob
concat
frame_dig -4
frame_bury 8
frame_dig 7
frame_dig 8
concat
frame_bury 7
frame_dig 6
frame_bury 5
frame_dig 5
itob
extract 6 0
concat
frame_dig 1
itob
concat
frame_dig 2
concat
bytec_1 // 0x00
intc_0 // 0
frame_dig 3
setbit
concat
frame_dig 7
concat
frame_bury 4
frame_dig -7
extract 2 0
box_del
pop
frame_dig -7
extract 2 0
frame_dig 4
box_put
retsub

// register_creator_caster
registercreatorcaster_14:
proto 0 0
bytec_0 // ""
intc_0 // 0
bytec_0 // ""
dup
txna ApplicationArgs 1
frame_bury 2
txna ApplicationArgs 2
frame_bury 3
txn GroupIndex
intc_1 // 1
-
frame_bury 1
frame_dig 1
frame_dig 2
frame_dig 3
callsub registercreator_3
frame_bury 0
bytec_2 // 0x151f7c75
frame_dig 0
concat
log
retsub

// send_aura_token
sendauratoken_15:
proto 2 0
bytec_0 // ""
dup
intc_0 // 0
dupn 3
bytec_0 // ""
dup
callsub ensureaurasexist_18
bytec_3 // 0x000461757261
frame_bury 0
frame_dig 0
extract 2 0
box_get
store 20
store 19
load 20
assert
load 19
frame_bury 1
frame_dig 1
intc_0 // 0
extract_uint64
frame_bury 2
frame_dig 1
pushint 10 // 10
extract_uint64
frame_bury 3
frame_dig 3
intc_1 // 1
>
// Not enough aura tokens
assert
itxn_begin
pushint 4 // axfer
itxn_field TypeEnum
frame_dig 2
itxn_field XferAsset
frame_dig -2
itxn_field AssetReceiver
frame_dig -1
itxn_field AssetAmount
itxn_submit
frame_dig 3
intc_1 // 1
-
frame_bury 3
frame_dig 2
itob
frame_dig 0
frame_bury 7
frame_dig 7
frame_bury 6
pushint 18 // 18
frame_bury 4
frame_dig 4
itob
extract 6 0
concat
frame_dig 3
itob
concat
frame_dig 6
concat
frame_bury 1
frame_dig 0
extract 2 0
box_del
pop
frame_dig 0
extract 2 0
frame_dig 1
box_put
retsub

// transfer_asset_from_contract
transferassetfromcontract_16:
proto 3 0
itxn_begin
pushint 4 // axfer
itxn_field TypeEnum
frame_dig -3
itxn_field XferAsset
frame_dig -2
itxn_field AssetAmount
frame_dig -1
itxn_field AssetReceiver
itxn_submit
retsub

// ensure_zero_payment
ensurezeropayment_17:
proto 1 0
frame_dig -1
gtxns Amount
intc_0 // 0
==
// Payment amount must be 0
assert
retsub

// ensure_auras_exist
ensureaurasexist_18:
proto 0 0
bytec 5 // "aura"
box_len
store 22
store 21
load 22
// aura tokens have not been created yet
assert
retsub

// ensure_asset_is_aura
ensureassetisaura_19:
proto 1 0
bytec_0 // ""
intc_0 // 0
bytec 5 // "aura"
box_get
store 24
store 23
load 24
assert
load 23
frame_bury 0
frame_dig 0
intc_0 // 0
extract_uint64
frame_bury 1
frame_dig -1
txnas Assets
frame_dig 1
==
// The asset is not an aura token
assert
retsub

// ensure_sound_nft_exists
ensuresoundnftexists_20:
proto 1 0
frame_dig -1
extract 2 0
box_len
store 34
store 33
load 34
// SoundNFT with specified key does not exist
assert
retsub

// ensure_art_nft_exists
ensureartnftexists_21:
proto 1 0
frame_dig -1
extract 2 0
box_len
store 44
store 43
load 44
// ArtNFT with specified key does not exist
assert
retsub

// ensure_registered_creative
ensureregisteredcreative_22:
proto 2 0
bytec_0 // ""
intc_0 // 0
dupn 2
bytec_0 // ""
dup
intc_0 // 0
dupn 2
bytec_0 // ""
dup
frame_dig -2
gtxns Sender
box_len
store 26
store 25
load 26
// Account is not a registered creative
assert
frame_dig -2
gtxns Sender
box_get
store 28
store 27
load 28
assert
load 27
frame_bury 0
frame_dig 0
intc_0 // 0
getbit
frame_bury 1
frame_dig 0
intc_1 // 1
getbit
frame_bury 2
frame_dig 0
intc_1 // 1
extract_uint64
frame_bury 3
frame_dig 0
frame_dig 0
pushint 9 // 9
extract_uint16
frame_dig 0
pushint 11 // 11
extract_uint16
substring3
frame_bury 4
frame_dig 0
frame_dig 0
pushint 11 // 11
extract_uint16
dig 1
len
substring3
frame_bury 5
frame_dig 0
pushint 13 // 13
extract_uint64
frame_bury 6
frame_dig -1
extract 2 0
pushbytes 0x6d75736963 // "music"
==
bnz ensureregisteredcreative_22_l3
ensureregisteredcreative_22_l1:
frame_dig -1
extract 2 0
pushbytes 0x617274 // "art"
==
bz ensureregisteredcreative_22_l4
intc_1 // 1
frame_bury 1
b ensureregisteredcreative_22_l4
ensureregisteredcreative_22_l3:
intc_1 // 1
frame_bury 1
b ensureregisteredcreative_22_l1
ensureregisteredcreative_22_l4:
bytec_1 // 0x00
intc_0 // 0
frame_dig 1
setbit
intc_1 // 1
frame_dig 2
setbit
frame_dig 3
itob
concat
frame_dig 4
frame_bury 10
frame_dig 10
frame_bury 9
pushint 21 // 21
frame_bury 7
frame_dig 7
frame_dig 10
len
+
frame_bury 8
frame_dig 8
intc_2 // 65536
<
assert
frame_dig 7
itob
extract 6 0
concat
frame_dig 5
frame_bury 10
frame_dig 9
frame_dig 10
concat
frame_bury 9
frame_dig 8
frame_bury 7
frame_dig 7
itob
extract 6 0
concat
frame_dig 6
itob
concat
frame_dig 9
concat
frame_bury 0
frame_dig -2
gtxns Sender
box_del
pop
frame_dig -2
gtxns Sender
frame_dig 0
box_put
retsub

// create_sound_nft_caster
createsoundnftcaster_23:
proto 0 0
bytec_0 // ""
intc_0 // 0
bytec_0 // ""
dupn 4
intc_0 // 0
bytec_0 // ""
intc_0 // 0
bytec_0 // ""
dupn 2
intc_0 // 0
dupn 2
txna ApplicationArgs 1
frame_bury 2
txna ApplicationArgs 2
frame_bury 3
txna ApplicationArgs 3
frame_bury 4
txna ApplicationArgs 4
frame_bury 5
txna ApplicationArgs 5
frame_bury 6
txna ApplicationArgs 6
btoi
frame_bury 7
txna ApplicationArgs 7
frame_bury 8
txna ApplicationArgs 8
btoi
frame_bury 9
txna ApplicationArgs 9
frame_bury 10
txna ApplicationArgs 10
frame_bury 11
txna ApplicationArgs 11
frame_bury 12
txna ApplicationArgs 12
btoi
frame_bury 13
txna ApplicationArgs 13
intc_0 // 0
getbyte
frame_bury 14
txna ApplicationArgs 14
intc_0 // 0
getbyte
frame_bury 15
txn GroupIndex
intc_1 // 1
-
frame_bury 1
frame_dig 1
gtxns TypeEnum
intc_1 // pay
==
assert
frame_dig 1
frame_dig 2
frame_dig 3
frame_dig 4
frame_dig 5
frame_dig 6
frame_dig 7
frame_dig 8
frame_dig 9
frame_dig 10
frame_dig 11
frame_dig 12
frame_dig 13
frame_dig 14
frame_dig 15
callsub createsoundnft_4
frame_bury 0
bytec_2 // 0x151f7c75
frame_dig 0
concat
log
retsub

// claim_created_sound_caster
claimcreatedsoundcaster_24:
proto 0 0
bytec_0 // ""
intc_0 // 0
bytec_0 // ""
intc_0 // 0
dup
txna ApplicationArgs 1
frame_bury 2
txna ApplicationArgs 2
intc_0 // 0
getbyte
frame_bury 3
txna ApplicationArgs 3
intc_0 // 0
getbyte
frame_bury 4
txn GroupIndex
intc_1 // 1
-
frame_bury 1
frame_dig 1
gtxns TypeEnum
pushint 4 // axfer
==
assert
frame_dig 1
frame_dig 2
frame_dig 3
frame_dig 4
callsub claimcreatedsound_5
frame_bury 0
bytec_2 // 0x151f7c75
frame_dig 0
concat
log
retsub

// create_art_nft_caster
createartnftcaster_25:
proto 0 0
bytec_0 // ""
intc_0 // 0
bytec_0 // ""
dupn 5
intc_0 // 0
dupn 2
txna ApplicationArgs 1
frame_bury 2
txna ApplicationArgs 2
frame_bury 3
txna ApplicationArgs 3
frame_bury 4
txna ApplicationArgs 4
frame_bury 5
txna ApplicationArgs 5
frame_bury 6
txna ApplicationArgs 6
frame_bury 7
txna ApplicationArgs 7
btoi
frame_bury 8
txna ApplicationArgs 8
intc_0 // 0
getbyte
frame_bury 9
txna ApplicationArgs 9
intc_0 // 0
getbyte
frame_bury 10
txn GroupIndex
intc_1 // 1
-
frame_bury 1
frame_dig 1
gtxns TypeEnum
intc_1 // pay
==
assert
frame_dig 1
frame_dig 2
frame_dig 3
frame_dig 4
frame_dig 5
frame_dig 6
frame_dig 7
frame_dig 8
frame_dig 9
frame_dig 10
callsub createartnft_6
frame_bury 0
bytec_2 // 0x151f7c75
frame_dig 0
concat
log
retsub

// claim_created_art_caster
claimcreatedartcaster_26:
proto 0 0
bytec_0 // ""
intc_0 // 0
bytec_0 // ""
intc_0 // 0
dup
txna ApplicationArgs 1
frame_bury 2
txna ApplicationArgs 2
intc_0 // 0
getbyte
frame_bury 3
txna ApplicationArgs 3
intc_0 // 0
getbyte
frame_bury 4
txn GroupIndex
intc_1 // 1
-
frame_bury 1
frame_dig 1
gtxns TypeEnum
pushint 4 // axfer
==
assert
frame_dig 1
frame_dig 2
frame_dig 3
frame_dig 4
callsub claimcreatedart_7
frame_bury 0
bytec_2 // 0x151f7c75
frame_dig 0
concat
log
retsub

// create_art_auction_caster
createartauctioncaster_27:
proto 0 0
bytec_0 // ""
intc_0 // 0
bytec_0 // ""
dup
intc_0 // 0
dupn 2
bytec_0 // ""
txna ApplicationArgs 1
frame_bury 2
txna ApplicationArgs 2
frame_bury 3
txna ApplicationArgs 3
btoi
frame_bury 4
txna ApplicationArgs 4
btoi
frame_bury 5
txna ApplicationArgs 5
btoi
frame_bury 6
txna ApplicationArgs 6
frame_bury 7
txn GroupIndex
intc_1 // 1
-
frame_bury 1
frame_dig 1
gtxns TypeEnum
intc_1 // pay
==
assert
frame_dig 1
frame_dig 2
frame_dig 3
frame_dig 4
frame_dig 5
frame_dig 6
frame_dig 7
callsub createartauction_8
frame_bury 0
bytec_2 // 0x151f7c75
frame_dig 0
concat
log
retsub