#pragma version 8
intcblock 0 1 65536 32 168 784 785
bytecblock 0x 0x00 0x151f7c75 0x000461757261 0x068101 0x61757261
txn NumAppArgs
intc_0 // 0
==
bnz main_l26
txna ApplicationArgs 0
pushbytes 0xbcfea105 // "promote_to_admin(account)void"
==
bnz main_l25
txna ApplicationArgs 0
pushbytes 0x2ad26dee // "demote_from_admin(account)void"
==
bnz main_l24
txna ApplicationArgs 0
pushbytes 0x5af922a0 // "ensure_creative_is_admin(address)void"
==
bnz main_l23
txna ApplicationArgs 0
pushbytes 0x5e53f297 // "create_aura_tokens()(uint64,string,uint64)"
==
bnz main_l22
txna ApplicationArgs 0
pushbytes 0x20c81379 // "register_creator(txn,string,string)(bool,bool,uint64,string,string,uint64,bool)"
==
bnz main_l21
txna ApplicationArgs 0
pushbytes 0xfa759456 // "create_sound_nft(pay,string,string,string,string,string,uint64,string,uint64,string,string,string,uint64,asset,account)(uint64,string,uint64,string,string,string,uint64,string,uint64,string,string,string,address,bool,bool)"
==
bnz main_l20
txna ApplicationArgs 0
pushbytes 0x8c877e57 // "claim_created_sound(axfer,string,account,asset)(uint64,string,uint64,string,string,string,uint64,string,uint64,string,string,string,address,bool,bool)"
==
bnz main_l19
txna ApplicationArgs 0
pushbytes 0xc81396d3 // "create_art_nft(pay,string,string,string,string,string,string,uint64,asset,account)(uint64,string,string,string,string,string,uint64,uint64,address,address,bool,bool)"
==
bnz main_l18
txna ApplicationArgs 0
pushbytes 0x8e351ddc // "claim_created_art(axfer,string,account,asset)(uint64,string,string,string,string,string,uint64,uint64,address,address,bool,bool)"
==
bnz main_l17
txna ApplicationArgs 0
pushbytes 0x823cad1f // "create_art_auction(pay,string,string,uint64,uint64,uint64,string)(string,address,string,string,uint64,uint64,uint64,string,uint64,address,bool)"
==
bnz main_l16
txna ApplicationArgs 0
pushbytes 0x8e7d5aa9 // "bid_on_art_auction(pay,string,account)(string,address,string,string,uint64,uint64,uint64,string,uint64,address,bool)"
==
bnz main_l15
txna ApplicationArgs 0
pushbytes 0x6c5357de // "complete_art_auction(axfer,axfer,string)(uint64,string,string,string,string,string,uint64,uint64,address,address,bool,bool)"
==
bnz main_l14
err
main_l14:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub completeartauctioncaster_42
intc_1 // 1
return
main_l15:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub bidonartauctioncaster_41
intc_1 // 1
return
main_l16:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub createartauctioncaster_40
intc_1 // 1
return
main_l17:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub claimcreatedartcaster_39
intc_1 // 1
return
main_l18:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub createartnftcaster_38
intc_1 // 1
return
main_l19:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub claimcreatedsoundcaster_37
intc_1 // 1
return
main_l20:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub createsoundnftcaster_36
intc_1 // 1
return
main_l21:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub registercreatorcaster_25
intc_1 // 1
return
main_l22:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub createauratokenscaster_18
intc_1 // 1
return
main_l23:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub ensurecreativeisadmincaster_16
intc_1 // 1
return
main_l24:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub demotefromadmincaster_15
intc_1 // 1
return
main_l25:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub promotetoadmincaster_14
intc_1 // 1
return
main_l26:
txn OnCompletion
intc_0 // NoOp
==
bnz main_l32
txn OnCompletion
pushint 4 // UpdateApplication
==
bnz main_l31
txn OnCompletion
pushint 5 // DeleteApplication
==
bnz main_l30
err
main_l30:
txn ApplicationID
intc_0 // 0
!=
assert
callsub delete_1
intc_1 // 1
return
main_l31:
txn ApplicationID
intc_0 // 0
!=
assert
callsub update_0
intc_1 // 1
return
main_l32:
txn ApplicationID
intc_0 // 0
==
assert
intc_1 // 1
return

// update
update_0:
proto 0 0
txn Sender
global CreatorAddress
==
// unauthorized
assert
intc_1 // 1
return

// delete
delete_1:
proto 0 0
txn Sender
global CreatorAddress
==
// unauthorized
assert
intc_1 // 1
return

// promote_to_admin
promotetoadmin_2:
proto 1 0
bytec_0 // ""
intc_0 // 0
txn Sender
global CreatorAddress
==
// unauthorized
assert
frame_dig -1
txnas Accounts
frame_bury 0
frame_dig 0
len
intc_3 // 32
==
assert
intc_1 // 1
frame_bury 1
frame_dig 0
frame_dig 1
callsub updatecreativeisadmin_19
retsub

// demote_from_admin
demotefromadmin_3:
proto 1 0
bytec_0 // ""
intc_0 // 0
txn Sender
global CreatorAddress
==
// unauthorized
assert
frame_dig -1
txnas Accounts
frame_bury 0
frame_dig 0
len
intc_3 // 32
==
assert
intc_0 // 0
frame_bury 1
frame_dig 0
frame_dig 1
callsub updatecreativeisadmin_19
retsub

// ensure_creative_is_admin
ensurecreativeisadmin_4:
proto 1 0
bytec_0 // ""
intc_0 // 0
dup
frame_dig -1
box_len
store 5
store 4
load 5
// The specified address is not a creative
assert
frame_dig -1
box_get
store 7
store 6
load 7
assert
load 6
frame_bury 0
frame_dig 0
intc 4 // 168
getbit
frame_bury 1
intc_1 // 1
frame_bury 2
frame_dig 1
frame_dig 2
==
// The creative is not an admin
assert
retsub

// create_aura_tokens
createauratokens_5:
proto 0 1
bytec_0 // ""
dupn 3
intc_0 // 0
bytec_3 // 0x000461757261
frame_bury 1
pushbytes 0x0003415552 // 0x0003415552
frame_bury 2
pushbytes 0x005268747470733a2f2f7265732e636c6f7564696e6172792e636f6d2f6465762d6d656469612f696d6167652f75706c6f61642f76313730333039313731302f417572616c6c795f415f703176326f622e706e67 // 0x005268747470733a2f2f7265732e636c6f7564696e6172792e636f6d2f6465762d6d656469612f696d6167652f75706c6f61642f76313730333039313731302f417572616c6c795f415f703176326f622e706e67
frame_bury 3
frame_dig 1
extract 2 0
box_len
store 9
store 8
load 9
!
bz createauratokens_5_l2
pushint 1000000000000 // 1000000000000
frame_bury 4
frame_dig 1
frame_dig 4
frame_dig 2
frame_dig 3
callsub bootstraptoken_17
frame_dig 1
extract 2 0
box_len
store 11
store 10
load 11
assert
createauratokens_5_l2:
frame_dig 1
extract 2 0
box_get
store 13
store 12
load 13
assert
load 12
frame_bury 0
retsub

// register_creator
registercreator_6:
proto 3 1
bytec_0 // ""
frame_dig -3
gtxns Sender
box_len
store 17
store 16
load 17
!
bz registercreator_6_l2
frame_dig -3
frame_dig -2
frame_dig -1
callsub createnftowner_20
registercreator_6_l2:
frame_dig -3
gtxns Sender
box_get
store 19
store 18
load 19
assert
load 18
frame_bury 0
retsub

// create_sound_nft
createsoundnft_7:
proto 15 1
bytec_0 // ""
dupn 2
intc_0 // 0
dupn 2
bytec_0 // ""
intc_0 // 0
dup
bytec_0 // ""
dup
intc_0 // 0
frame_dig -15
callsub ensurezeropayment_29
frame_dig -2
callsub ensureassetisaura_31
intc_0 // 0
store 20
createsoundnft_7_l1:
load 20
pushint 1000 // 1000
global MinTxnFee
/
<
bz createsoundnft_7_l3
itxn_begin
pushint 6 // appl
itxn_field TypeEnum
pushint 5 // DeleteApplication
itxn_field OnCompletion
bytec 4 // 0x068101
itxn_field ApprovalProgram
bytec 4 // 0x068101
itxn_field ClearStateProgram
itxn_submit
load 20
intc_1 // 1
+
store 20
b createsoundnft_7_l1
createsoundnft_7_l3:
pushbytes 0x00056d75736963 // 0x00056d75736963
frame_bury 1
frame_dig -15
frame_dig 1
callsub ensureregisteredcreative_35
frame_dig -1
txnas Accounts
frame_dig -15
gtxns Sender
==
// The creator must be the same as the transaction sender
assert
frame_dig -13
extract 2 0
box_len
store 22
store 21
load 22
!
// An asset with this key already exists
assert
frame_dig -15
gtxns Sender
frame_bury 2
frame_dig 2
len
intc_3 // 32
==
assert
itxn_begin
pushint 3 // acfg
itxn_field TypeEnum
frame_dig -14
extract 2 0
itxn_field ConfigAssetName
frame_dig -3
itxn_field ConfigAssetTotal
frame_dig -6
extract 2 0
itxn_field ConfigAssetURL
frame_dig 2
itxn_field ConfigAssetManager
itxn_submit
itxn CreatedAssetID
frame_bury 3
intc_1 // 1
frame_bury 4
intc_0 // 0
frame_bury 5
frame_dig 3
itob
frame_dig -13
frame_bury 10
frame_dig 10
frame_bury 9
pushint 81 // 81
frame_bury 7
frame_dig 7
frame_dig 10
len
+
frame_bury 8
frame_dig 8
intc_2 // 65536
<
assert
frame_dig 7
itob
extract 6 0
concat
frame_dig -3
itob
concat
frame_dig -12
frame_bury 10
frame_dig 9
frame_dig 10
concat
frame_bury 9
frame_dig 8
frame_bury 7
frame_dig 7
frame_dig 10
len
+
frame_bury 8
frame_dig 8
intc_2 // 65536
<
assert
frame_dig 7
itob
extract 6 0
concat
frame_dig -11
frame_bury 10
frame_dig 9
frame_dig 10
concat
frame_bury 9
frame_dig 8
frame_bury 7
frame_dig 7
frame_dig 10
len
+
frame_bury 8
frame_dig 8
intc_2 // 65536
<
assert
frame_dig 7
itob
extract 6 0
concat
frame_dig -10
frame_bury 10
frame_dig 9
frame_dig 10
concat
frame_bury 9
frame_dig 8
frame_bury 7
frame_dig 7
frame_dig 10
len
+
frame_bury 8
frame_dig 8
intc_2 // 65536
<
assert
frame_dig 7
itob
extract 6 0
concat
frame_dig -9
itob
concat
frame_dig -8
frame_bury 10
frame_dig 9
frame_dig 10
concat
frame_bury 9
frame_dig 8
frame_bury 7
frame_dig 7
frame_dig 10
len
+
frame_bury 8
frame_dig 8
intc_2 // 65536
<
assert
frame_dig 7
itob
extract 6 0
concat
frame_dig -7
itob
concat
frame_dig -6
frame_bury 10
frame_dig 9
frame_dig 10
concat
frame_bury 9
frame_dig 8
frame_bury 7
frame_dig 7
frame_dig 10
len
+
frame_bury 8
frame_dig 8
intc_2 // 65536
<
assert
frame_dig 7
itob
extract 6 0
concat
frame_dig -5
frame_bury 10
frame_dig 9
frame_dig 10
concat
frame_bury 9
frame_dig 8
frame_bury 7
frame_dig 7
frame_dig 10
len
+
frame_bury 8
frame_dig 8
intc_2 // 65536
<
assert
frame_dig 7
itob
extract 6 0
concat
frame_dig -4
frame_bury 10
frame_dig 9
frame_dig 10
concat
frame_bury 9
frame_dig 8
frame_bury 7
frame_dig 7
itob
extract 6 0
concat
frame_dig 2
concat
bytec_1 // 0x00
intc_0 // 0
frame_dig 4
setbit
intc_1 // 1
frame_dig 5
setbit
concat
frame_dig 9
concat
frame_bury 6
frame_dig -13
extract 2 0
box_del
pop
frame_dig -13
extract 2 0
frame_dig 6
box_put
frame_dig 2
callsub incrementcreatornftcount_21
intc_1 // 1
frame_bury 11
frame_dig 2
frame_dig 11
callsub sendauratoken_26
frame_dig -13
extract 2 0
box_get
store 24
store 23
load 24
assert
load 23
frame_bury 0
retsub

// claim_created_sound
claimcreatedsound_8:
proto 4 1
bytec_0 // ""
dup
intc_0 // 0
bytec_0 // ""
intc_0 // 0
bytec_0 // ""
dupn 2
intc_0 // 0
bytec_0 // ""
intc_0 // 0
bytec_0 // ""
dupn 3
intc_0 // 0
dupn 3
bytec_0 // ""
dup
frame_dig -3
callsub ensuresoundnftexists_33
frame_dig -3
extract 2 0
box_get
store 38
store 37
load 38
assert
load 37
frame_bury 1
frame_dig 1
intc_0 // 0
extract_uint64
frame_bury 2
frame_dig 1
frame_dig 1
pushint 8 // 8
extract_uint16
frame_dig 1
pushint 18 // 18
extract_uint16
substring3
frame_bury 3
frame_dig 1
pushint 10 // 10
extract_uint64
frame_bury 4
frame_dig 1
frame_dig 1
pushint 18 // 18
extract_uint16
frame_dig 1
pushint 20 // 20
extract_uint16
substring3
frame_bury 5
frame_dig 1
frame_dig 1
pushint 20 // 20
extract_uint16
frame_dig 1
pushint 22 // 22
extract_uint16
substring3
frame_bury 6
frame_dig 1
frame_dig 1
pushint 22 // 22
extract_uint16
frame_dig 1
intc_3 // 32
extract_uint16
substring3
frame_bury 7
frame_dig 1
pushint 24 // 24
extract_uint64
frame_bury 8
frame_dig 1
frame_dig 1
intc_3 // 32
extract_uint16
frame_dig 1
pushint 42 // 42
extract_uint16
substring3
frame_bury 9
frame_dig 1
pushint 34 // 34
extract_uint64
frame_bury 10
frame_dig 1
frame_dig 1
pushint 42 // 42
extract_uint16
frame_dig 1
pushint 44 // 44
extract_uint16
substring3
frame_bury 11
frame_dig 1
frame_dig 1
pushint 44 // 44
extract_uint16
frame_dig 1
pushint 46 // 46
extract_uint16
substring3
frame_bury 12
frame_dig 1
frame_dig 1
pushint 46 // 46
extract_uint16
dig 1
len
substring3
frame_bury 13
frame_dig 1
extract 48 32
frame_bury 14
frame_dig 1
pushint 640 // 640
getbit
frame_bury 15
frame_dig 1
pushint 641 // 641
getbit
frame_bury 16
frame_dig 16
!
// This art nft has already been claimed
assert
frame_dig 14
frame_dig -4
gtxns Sender
==
// This address is not the nft creator
assert
frame_dig -2
txnas Accounts
frame_dig 14
==
// The reciever must be the creator of the nft
assert
frame_dig -1
txnas Assets
frame_dig 2
==
// The asset must have the same asset_id as the nft
assert
frame_dig 2
frame_dig 4
frame_dig 14
callsub transferassetfromcontract_27
intc_1 // 1
frame_bury 16
frame_dig 2
itob
frame_dig 3
frame_bury 20
frame_dig 20
frame_bury 19
pushint 81 // 81
frame_bury 17
frame_dig 17
frame_dig 20
len
+
frame_bury 18
frame_dig 18
intc_2 // 65536
<
assert
frame_dig 17
itob
extract 6 0
concat
frame_dig 4
itob
concat
frame_dig 5
frame_bury 20
frame_dig 19
frame_dig 20
concat
frame_bury 19
frame_dig 18
frame_bury 17
frame_dig 17
frame_dig 20
len
+
frame_bury 18
frame_dig 18
intc_2 // 65536
<
assert
frame_dig 17
itob
extract 6 0
concat
frame_dig 6
frame_bury 20
frame_dig 19
frame_dig 20
concat
frame_bury 19
frame_dig 18
frame_bury 17
frame_dig 17
frame_dig 20
len
+
frame_bury 18
frame_dig 18
intc_2 // 65536
<
assert
frame_dig 17
itob
extract 6 0
concat
frame_dig 7
frame_bury 20
frame_dig 19
frame_dig 20
concat
frame_bury 19
frame_dig 18
frame_bury 17
frame_dig 17
frame_dig 20
len
+
frame_bury 18
frame_dig 18
intc_2 // 65536
<
assert
frame_dig 17
itob
extract 6 0
concat
frame_dig 8
itob
concat
frame_dig 9
frame_bury 20
frame_dig 19
frame_dig 20
concat
frame_bury 19
frame_dig 18
frame_bury 17
frame_dig 17
frame_dig 20
len
+
frame_bury 18
frame_dig 18
intc_2 // 65536
<
assert
frame_dig 17
itob
extract 6 0
concat
frame_dig 10
itob
concat
frame_dig 11
frame_bury 20
frame_dig 19
frame_dig 20
concat
frame_bury 19
frame_dig 18
frame_bury 17
frame_dig 17
frame_dig 20
len
+
frame_bury 18
frame_dig 18
intc_2 // 65536
<
assert
frame_dig 17
itob
extract 6 0
concat
frame_dig 12
frame_bury 20
frame_dig 19
frame_dig 20
concat
frame_bury 19
frame_dig 18
frame_bury 17
frame_dig 17
frame_dig 20
len
+
frame_bury 18
frame_dig 18
intc_2 // 65536
<
assert
frame_dig 17
itob
extract 6 0
concat
frame_dig 13
frame_bury 20
frame_dig 19
frame_dig 20
concat
frame_bury 19
frame_dig 18
frame_bury 17
frame_dig 17
itob
extract 6 0
concat
frame_dig 14
concat
bytec_1 // 0x00
intc_0 // 0
frame_dig 15
setbit
intc_1 // 1
frame_dig 16
setbit
concat
frame_dig 19
concat
frame_bury 1
frame_dig 3
extract 2 0
box_del
pop
frame_dig 3
extract 2 0
frame_dig 1
box_put
frame_dig 3
extract 2 0
box_get
store 40
store 39
load 40
assert
load 39
frame_bury 0
retsub

// create_art_nft
createartnft_9:
proto 10 1
bytec_0 // ""
dupn 2
intc_0 // 0
dupn 2
bytec_0 // ""
intc_0 // 0
bytec_0 // ""
intc_0 // 0
dup
bytec_0 // ""
dup
intc_0 // 0
frame_dig -10
callsub ensurezeropayment_29
frame_dig -2
callsub ensureassetisaura_31
frame_dig -1
txnas Accounts
frame_dig -10
gtxns Sender
==
// The creator must be the same as the transaction sender
assert
frame_dig -9
extract 2 0
box_len
store 44
store 43
load 44
!
// An art NFT with this key already exists
assert
pushbytes 0x0003617274 // 0x0003617274
frame_bury 1
frame_dig -10
frame_dig 1
callsub ensureregisteredcreative_35
frame_dig -10
gtxns Sender
frame_bury 2
frame_dig 2
len
intc_3 // 32
==
assert
itxn_begin
pushint 3 // acfg
itxn_field TypeEnum
frame_dig -8
extract 2 0
itxn_field ConfigAssetName
intc_1 // 1
itxn_field ConfigAssetTotal
frame_dig -4
extract 2 0
itxn_field ConfigAssetURL
frame_dig 2
itxn_field ConfigAssetManager
itxn_submit
itxn CreatedAssetID
frame_bury 3
intc_0 // 0
frame_bury 4
intc_1 // 1
frame_bury 5
global CurrentApplicationAddress
frame_bury 6
frame_dig 6
len
intc_3 // 32
==
assert
intc_0 // 0
frame_bury 7
frame_dig 3
itob
frame_dig -9
frame_bury 12
frame_dig 12
frame_bury 11
pushint 99 // 99
frame_bury 9
frame_dig 9
frame_dig 12
len
+
frame_bury 10
frame_dig 10
intc_2 // 65536
<
assert
frame_dig 9
itob
extract 6 0
concat
frame_dig -7
frame_bury 12
frame_dig 11
frame_dig 12
concat
frame_bury 11
frame_dig 10
frame_bury 9
frame_dig 9
frame_dig 12
len
+
frame_bury 10
frame_dig 10
intc_2 // 65536
<
assert
frame_dig 9
itob
extract 6 0
concat
frame_dig -6
frame_bury 12
frame_dig 11
frame_dig 12
concat
frame_bury 11
frame_dig 10
frame_bury 9
frame_dig 9
frame_dig 12
len
+
frame_bury 10
frame_dig 10
intc_2 // 65536
<
assert
frame_dig 9
itob
extract 6 0
concat
frame_dig -5
frame_bury 12
frame_dig 11
frame_dig 12
concat
frame_bury 11
frame_dig 10
frame_bury 9
frame_dig 9
frame_dig 12
len
+
frame_bury 10
frame_dig 10
intc_2 // 65536
<
assert
frame_dig 9
itob
extract 6 0
concat
frame_dig -4
frame_bury 12
frame_dig 11
frame_dig 12
concat
frame_bury 11
frame_dig 10
frame_bury 9
frame_dig 9
itob
extract 6 0
concat
frame_dig -3
itob
concat
frame_dig 4
itob
concat
frame_dig 2
concat
frame_dig 6
concat
bytec_1 // 0x00
intc_0 // 0
frame_dig 5
setbit
intc_1 // 1
frame_dig 7
setbit
concat
frame_dig 11
concat
frame_bury 8
frame_dig -9
extract 2 0
box_del
pop
frame_dig -9
extract 2 0
frame_dig 8
box_put
frame_dig 2
callsub incrementcreatornftcount_21
intc_1 // 1
frame_bury 13
frame_dig 2
frame_dig 13
callsub sendauratoken_26
frame_dig -9
extract 2 0
box_get
store 46
store 45
load 46
assert
load 45
frame_bury 0
retsub

// claim_created_art
claimcreatedart_10:
proto 4 1
bytec_0 // ""
dup
intc_0 // 0
bytec_0 // ""
dupn 4
intc_0 // 0
dup
bytec_0 // ""
dup
intc_0 // 0
dupn 4
bytec_0 // ""
dup
frame_dig -3
callsub ensureartnftexists_34
frame_dig -3
extract 2 0
box_get
store 48
store 47
load 48
assert
load 47
frame_bury 1
frame_dig 1
intc_0 // 0
extract_uint64
frame_bury 2
frame_dig 1
frame_dig 1
pushint 8 // 8
extract_uint16
frame_dig 1
pushint 10 // 10
extract_uint16
substring3
frame_bury 3
frame_dig 1
frame_dig 1
pushint 10 // 10
extract_uint16
frame_dig 1
pushint 12 // 12
extract_uint16
substring3
frame_bury 4
frame_dig 1
frame_dig 1
pushint 12 // 12
extract_uint16
frame_dig 1
pushint 14 // 14
extract_uint16
substring3
frame_bury 5
frame_dig 1
frame_dig 1
pushint 14 // 14
extract_uint16
frame_dig 1
pushint 16 // 16
extract_uint16
substring3
frame_bury 6
frame_dig 1
frame_dig 1
pushint 16 // 16
extract_uint16
dig 1
len
substring3
frame_bury 7
frame_dig 1
pushint 18 // 18
extract_uint64
frame_bury 8
frame_dig 1
pushint 26 // 26
extract_uint64
frame_bury 9
frame_dig 1
extract 34 32
frame_bury 10
frame_dig 1
extract 66 32
frame_bury 11
frame_dig 1
intc 5 // 784
getbit
frame_bury 12
frame_dig 1
intc 6 // 785
getbit
frame_bury 13
frame_dig 13
!
// This art nft has already been claimed
assert
frame_dig -2
txnas Accounts
frame_dig 10
==
// The reciever must be the creator of the nft
assert
frame_dig 10
frame_dig -4
gtxns Sender
==
// This address is not the nft creator
assert
frame_dig -1
txnas Assets
frame_dig 2
==
// The asset must have the same asset_id as the nft
assert
intc_1 // 1
frame_bury 14
frame_dig 2
frame_dig 14
frame_dig 10
callsub transferassetfromcontract_27
frame_dig -4
gtxns Sender
frame_bury 11
frame_dig 11
len
intc_3 // 32
==
assert
intc_1 // 1
frame_bury 13
frame_dig 2
itob
frame_dig 3
frame_bury 18
frame_dig 18
frame_bury 17
pushint 99 // 99
frame_bury 15
frame_dig 15
frame_dig 18
len
+
frame_bury 16
frame_dig 16
intc_2 // 65536
<
assert
frame_dig 15
itob
extract 6 0
concat
frame_dig 4
frame_bury 18
frame_dig 17
frame_dig 18
concat
frame_bury 17
frame_dig 16
frame_bury 15
frame_dig 15
frame_dig 18
len
+
frame_bury 16
frame_dig 16
intc_2 // 65536
<
assert
frame_dig 15
itob
extract 6 0
concat
frame_dig 5
frame_bury 18
frame_dig 17
frame_dig 18
concat
frame_bury 17
frame_dig 16
frame_bury 15
frame_dig 15
frame_dig 18
len
+
frame_bury 16
frame_dig 16
intc_2 // 65536
<
assert
frame_dig 15
itob
extract 6 0
concat
frame_dig 6
frame_bury 18
frame_dig 17
frame_dig 18
concat
frame_bury 17
frame_dig 16
frame_bury 15
frame_dig 15
frame_dig 18
len
+
frame_bury 16
frame_dig 16
intc_2 // 65536
<
assert
frame_dig 15
itob
extract 6 0
concat
frame_dig 7
frame_bury 18
frame_dig 17
frame_dig 18
concat
frame_bury 17
frame_dig 16
frame_bury 15
frame_dig 15
itob
extract 6 0
concat
frame_dig 8
itob
concat
frame_dig 9
itob
concat
frame_dig 10
concat
frame_dig 11
concat
bytec_1 // 0x00
intc_0 // 0
frame_dig 12
setbit
intc_1 // 1
frame_dig 13
setbit
concat
frame_dig 17
concat
frame_bury 1
frame_dig 3
extract 2 0
box_del
pop
frame_dig 3
extract 2 0
frame_dig 1
box_put
frame_dig 3
extract 2 0
box_get
store 50
store 49
load 50
assert
load 49
frame_bury 0
retsub

// create_art_auction
createartauction_11:
proto 7 1
bytec_0 // ""
dupn 3
frame_dig -6
extract 2 0
box_len
store 54
store 53
load 54
!
// An auction with this key already exists
assert
frame_dig -7
callsub ensurezeropayment_29
frame_dig -3
frame_dig -2
<
// End date must be greater that start date
assert
frame_dig -5
extract 2 0
box_len
store 56
store 55
load 56
// Art NFT with this key was not found
assert
frame_dig -5
extract 2 0
box_get
store 58
store 57
load 58
assert
load 57
frame_bury 1
frame_dig 1
extract 66 32
frame_bury 2
frame_dig 1
frame_dig 1
pushint 12 // 12
extract_uint16
frame_dig 1
pushint 14 // 14
extract_uint16
substring3
frame_bury 3
frame_dig 2
frame_dig -7
gtxns Sender
==
// Only the owner of this NFT can auction it
assert
frame_dig -7
frame_dig -6
frame_dig -5
frame_dig 3
frame_dig -1
frame_dig -4
frame_dig -3
frame_dig -2
callsub newartauction_22
frame_dig -6
extract 2 0
box_get
store 60
store 59
load 60
assert
load 59
frame_bury 0
retsub

// bid_on_art_auction
bidonartauction_12:
proto 3 1
bytec_0 // ""
dupn 2
intc_0 // 0
bytec_0 // ""
intc_0 // 0
bytec_0 // ""
frame_dig -2
callsub ensureartauctionexists_32
frame_dig -3
gtxns Receiver
global CurrentApplicationAddress
==
assert
frame_dig -2
extract 2 0
box_get
store 64
store 63
load 64
assert
load 63
frame_bury 1
frame_dig 1
frame_dig 1
pushint 36 // 36
extract_uint16
frame_dig 1
pushint 62 // 62
extract_uint16
substring3
frame_bury 2
frame_dig 1
pushint 64 // 64
extract_uint64
frame_bury 3
frame_dig 1
extract 72 32
frame_bury 4
frame_dig 1
pushint 38 // 38
extract_uint64
frame_bury 5
frame_dig -1
txnas Accounts
frame_dig 4
==
// The current_highest_bidder passed is not the highest_bidder
assert
frame_dig 3
intc_0 // 0
==
bnz bidonartauction_12_l4
frame_dig -3
gtxns Amount
frame_dig 3
>
// Bid amount must be greater that the highest_bid
assert
bidonartauction_12_l2:
frame_dig 4
global CurrentApplicationAddress
==
!
bz bidonartauction_12_l5
pushbytes 0x526566756e6420666f7220796f757220626964206f6e3a20 // "Refund for your bid on: "
frame_dig 2
extract 2 0
concat
frame_bury 6
frame_dig 6
len
itob
extract 6 0
frame_dig 6
concat
frame_bury 6
frame_dig -1
frame_dig 3
frame_dig 6
callsub refundlastbidder_28
b bidonartauction_12_l5
bidonartauction_12_l4:
frame_dig -3
gtxns Amount
frame_dig 5
>
// Bid amount has to be greated than the minimum bid
assert
b bidonartauction_12_l2
bidonartauction_12_l5:
frame_dig -3
frame_dig -2
callsub recordauctionbid_23
frame_dig -2
extract 2 0
box_get
store 66
store 65
load 66
assert
load 65
frame_bury 0
retsub

// complete_art_auction
completeartauction_13:
proto 3 1
bytec_0 // ""
dupn 5
intc_0 // 0
frame_dig -1
callsub ensureartauctionexists_32
frame_dig -1
extract 2 0
box_get
store 72
store 71
load 72
assert
load 71
frame_bury 1
frame_dig 1
frame_dig 1
pushint 34 // 34
extract_uint16
frame_dig 1
pushint 36 // 36
extract_uint16
substring3
frame_bury 2
frame_dig 1
extract 2 32
frame_bury 3
frame_dig 1
extract 72 32
frame_bury 4
frame_dig 2
extract 2 0
box_get
store 74
store 73
load 74
assert
load 73
frame_bury 5
frame_dig 5
intc_0 // 0
extract_uint64
frame_bury 6
frame_dig -3
gtxns Sender
frame_dig 4
==
// The highest_bidder should optin
assert
frame_dig -2
gtxns XferAsset
frame_dig 6
==
// The asset transfered is not the auctioned asset
assert
frame_dig 3
frame_dig -2
gtxns Sender
==
// Only the auctioneer is allowed to complete an auction
assert
frame_dig -2
gtxns AssetAmount
intc_1 // 1
==
// You can only transfer one asset at a time
assert
frame_dig -2
gtxns AssetReceiver
frame_dig 4
==
// The asset should be sent to the highest_bidder
assert
frame_dig 2
callsub ensureartnftexists_34
frame_dig 2
frame_dig 4
callsub updateartnftowner_24
frame_dig 2
extract 2 0
box_get
store 76
store 75
load 76
assert
load 75
frame_bury 0
retsub

// promote_to_admin_caster
promotetoadmincaster_14:
proto 0 0
intc_0 // 0
txna ApplicationArgs 1
intc_0 // 0
getbyte
frame_bury 0
frame_dig 0
callsub promotetoadmin_2
retsub

// demote_from_admin_caster
demotefromadmincaster_15:
proto 0 0
intc_0 // 0
txna ApplicationArgs 1
intc_0 // 0
getbyte
frame_bury 0
frame_dig 0
callsub demotefromadmin_3
retsub

// ensure_creative_is_admin_caster
ensurecreativeisadmincaster_16:
proto 0 0
bytec_0 // ""
txna ApplicationArgs 1
frame_bury 0
frame_dig 0
callsub ensurecreativeisadmin_4
retsub

// bootstrap_token
bootstraptoken_17:
proto 4 0
intc_0 // 0
bytec_0 // ""
intc_0 // 0
dup
bytec_0 // ""
dup
frame_dig -4
extract 2 0
box_len
store 15
store 14
load 15
!
// Aura tokens already exist
assert
itxn_begin
pushint 3 // acfg
itxn_field TypeEnum
frame_dig -3
itxn_field ConfigAssetTotal
frame_dig -4
extract 2 0
itxn_field ConfigAssetName
frame_dig -2
extract 2 0
itxn_field ConfigAssetUnitName
frame_dig -1
extract 2 0
itxn_field ConfigAssetURL
global CurrentApplicationAddress
itxn_field ConfigAssetFreeze
global CurrentApplicationAddress
itxn_field ConfigAssetManager
global CurrentApplicationAddress
itxn_field ConfigAssetReserve
global CurrentApplicationAddress
itxn_field ConfigAssetClawback
itxn_submit
itxn CreatedAssetID
frame_bury 0
frame_dig 0
itob
log
frame_dig 0
itob
frame_dig -4
frame_bury 5
frame_dig 5
frame_bury 4
pushint 18 // 18
frame_bury 2
frame_dig 2
itob
extract 6 0
concat
frame_dig -3
itob
concat
frame_dig 4
concat
frame_bury 1
frame_dig -4
extract 2 0
box_del
pop
frame_dig -4
extract 2 0
frame_dig 1
box_put
retsub

// create_aura_tokens_caster
createauratokenscaster_18:
proto 0 0
bytec_0 // ""
callsub createauratokens_5
frame_bury 0
bytec_2 // 0x151f7c75
frame_dig 0
concat
log
retsub

// update_creative_is_admin
updatecreativeisadmin_19:
proto 2 0
bytec_0 // ""
intc_0 // 0
dupn 2
bytec_0 // ""
dup
intc_0 // 0
dupn 2
bytec_0 // ""
dup
frame_dig -2
box_len
store 1
store 0
load 1
// The address is not an aurally creative
assert
frame_dig -2
box_get
store 3
store 2
load 3
assert
load 2
frame_bury 0
frame_dig 0
intc_0 // 0
getbit
frame_bury 1
frame_dig 0
intc_1 // 1
getbit
frame_bury 2
frame_dig 0
intc_1 // 1
extract_uint64
frame_bury 3
frame_dig 0
frame_dig 0
pushint 9 // 9
extract_uint16
frame_dig 0
pushint 11 // 11
extract_uint16
substring3
frame_bury 4
frame_dig 0
frame_dig 0
pushint 11 // 11
extract_uint16
dig 1
len
substring3
frame_bury 5
frame_dig 0
pushint 13 // 13
extract_uint64
frame_bury 6
bytec_1 // 0x00
intc_0 // 0
frame_dig 1
setbit
intc_1 // 1
frame_dig 2
setbit
frame_dig 3
itob
concat
frame_dig 4
frame_bury 10
frame_dig 10
frame_bury 9
pushint 22 // 22
frame_bury 7
frame_dig 7
frame_dig 10
len
+
frame_bury 8
frame_dig 8
intc_2 // 65536
<
assert
frame_dig 7
itob
extract 6 0
concat
frame_dig 5
frame_bury 10
frame_dig 9
frame_dig 10
concat
frame_bury 9
frame_dig 8
frame_bury 7
frame_dig 7
itob
extract 6 0
concat
frame_dig 6
itob
concat
bytec_1 // 0x00
intc_0 // 0
frame_dig -1
setbit
concat
frame_dig 9
concat
frame_bury 0
frame_dig -2
box_del
pop
frame_dig -2
frame_dig 0
box_put
retsub

// create_nft_owner
createnftowner_20:
proto 3 0
intc_0 // 0
dupn 4
bytec_0 // ""
intc_0 // 0
dup
bytec_0 // ""
dup
itxn_begin
pushint 3 // acfg
itxn_field TypeEnum
frame_dig -3
gtxns Sender
itxn_field ConfigAssetName
global CurrentApplicationAddress
itxn_field ConfigAssetManager
intc_1 // 1
itxn_field ConfigAssetTotal
itxn_submit
itxn CreatedAssetID
frame_bury 0
intc_0 // 0
frame_bury 1
intc_0 // 0
frame_bury 2
intc_0 // 0
frame_bury 3
intc_0 // 0
frame_bury 4
bytec_1 // 0x00
intc_0 // 0
frame_dig 1
setbit
intc_1 // 1
frame_dig 2
setbit
frame_dig 3
itob
concat
frame_dig -2
frame_bury 9
frame_dig 9
frame_bury 8
pushint 22 // 22
frame_bury 6
frame_dig 6
frame_dig 9
len
+
frame_bury 7
frame_dig 7
intc_2 // 65536
<
assert
frame_dig 6
itob
extract 6 0
concat
frame_dig -1
frame_bury 9
frame_dig 8
frame_dig 9
concat
frame_bury 8
frame_dig 7
frame_bury 6
frame_dig 6
itob
extract 6 0
concat
frame_dig 0
itob
concat
bytec_1 // 0x00
intc_0 // 0
frame_dig 4
setbit
concat
frame_dig 8
concat
frame_bury 5
frame_dig -3
gtxns Sender
box_del
pop
frame_dig -3
gtxns Sender
frame_dig 5
box_put
retsub

// increment_creator_nft_count
incrementcreatornftcount_21:
proto 1 0
bytec_0 // ""
intc_0 // 0
dupn 2
bytec_0 // ""
dup
intc_0 // 0
dupn 3
bytec_0 // ""
dup
frame_dig -1
box_get
store 26
store 25
load 26
assert
load 25
frame_bury 0
frame_dig 0
intc_1 // 1
extract_uint64
frame_bury 1
frame_dig 0
intc_0 // 0
getbit
frame_bury 2
frame_dig 0
intc_1 // 1
getbit
frame_bury 3
frame_dig 0
frame_dig 0
pushint 9 // 9
extract_uint16
frame_dig 0
pushint 11 // 11
extract_uint16
substring3
frame_bury 4
frame_dig 0
frame_dig 0
pushint 11 // 11
extract_uint16
dig 1
len
substring3
frame_bury 5
frame_dig 0
pushint 13 // 13
extract_uint64
frame_bury 6
frame_dig 0
intc 4 // 168
getbit
frame_bury 7
frame_dig 1
intc_1 // 1
+
frame_bury 1
bytec_1 // 0x00
intc_0 // 0
frame_dig 2
setbit
intc_1 // 1
frame_dig 3
setbit
frame_dig 1
itob
concat
frame_dig 4
frame_bury 11
frame_dig 11
frame_bury 10
pushint 22 // 22
frame_bury 8
frame_dig 8
frame_dig 11
len
+
frame_bury 9
frame_dig 9
intc_2 // 65536
<
assert
frame_dig 8
itob
extract 6 0
concat
frame_dig 5
frame_bury 11
frame_dig 10
frame_dig 11
concat
frame_bury 10
frame_dig 9
frame_bury 8
frame_dig 8
itob
extract 6 0
concat
frame_dig 6
itob
concat
bytec_1 // 0x00
intc_0 // 0
frame_dig 7
setbit
concat
frame_dig 10
concat
frame_bury 0
frame_dig -1
box_del
pop
frame_dig -1
frame_dig 0
box_put
retsub

// new_art_auction
newartauction_22:
proto 8 0
bytec_0 // ""
intc_0 // 0
bytec_0 // ""
intc_0 // 0
bytec_0 // ""
intc_0 // 0
dup
bytec_0 // ""
dup
frame_dig -7
extract 2 0
box_len
store 62
store 61
load 62
!
// an art auction with this key already exists
assert
frame_dig -8
gtxns Sender
frame_bury 0
frame_dig 0
len
intc_3 // 32
==
assert
intc_0 // 0
frame_bury 1
global CurrentApplicationAddress
frame_bury 2
frame_dig 2
len
intc_3 // 32
==
assert
intc_0 // 0
frame_bury 3
frame_dig -7
frame_bury 8
frame_dig 8
frame_bury 7
pushint 105 // 105
frame_bury 5
frame_dig 5
frame_dig 8
len
+
frame_bury 6
frame_dig 6
intc_2 // 65536
<
assert
frame_dig 5
itob
extract 6 0
frame_dig 0
concat
frame_dig -6
frame_bury 8
frame_dig 7
frame_dig 8
concat
frame_bury 7
frame_dig 6
frame_bury 5
frame_dig 5
frame_dig 8
len
+
frame_bury 6
frame_dig 6
intc_2 // 65536
<
assert
frame_dig 5
itob
extract 6 0
concat
frame_dig -5
frame_bury 8
frame_dig 7
frame_dig 8
concat
frame_bury 7
frame_dig 6
frame_bury 5
frame_dig 5
frame_dig 8
len
+
frame_bury 6
frame_dig 6
intc_2 // 65536
<
assert
frame_dig 5
itob
extract 6 0
concat
frame_dig -3
itob
concat
frame_dig -2
itob
concat
frame_dig -1
itob
concat
frame_dig -4
frame_bury 8
frame_dig 7
frame_dig 8
concat
frame_bury 7
frame_dig 6
frame_bury 5
frame_dig 5
itob
extract 6 0
concat
frame_dig 1
itob
concat
frame_dig 2
concat
bytec_1 // 0x00
intc_0 // 0
frame_dig 3
setbit
concat
frame_dig 7
concat
frame_bury 4
frame_dig -7
extract 2 0
box_del
pop
frame_dig -7
extract 2 0
frame_dig 4
box_put
retsub

// record_auction_bid
recordauctionbid_23:
proto 2 0
bytec_0 // ""
dupn 4
intc_0 // 0
dupn 3
bytec_0 // ""
intc_0 // 0
dupn 2
bytec_0 // ""
dup
frame_dig -1
extract 2 0
box_get
store 68
store 67
load 68
assert
load 67
frame_bury 0
frame_dig 0
extract 2 32
frame_bury 1
frame_dig 0
frame_dig 0
pushint 34 // 34
extract_uint16
frame_dig 0
pushint 36 // 36
extract_uint16
substring3
frame_bury 2
frame_dig 0
frame_dig 0
pushint 36 // 36
extract_uint16
frame_dig 0
pushint 62 // 62
extract_uint16
substring3
frame_bury 3
frame_dig -2
gtxns Sender
frame_bury 4
frame_dig 4
len
intc_3 // 32
==
assert
frame_dig 0
pushint 64 // 64
extract_uint64
frame_bury 5
frame_dig 0
pushint 38 // 38
extract_uint64
frame_bury 6
frame_dig 0
pushint 46 // 46
extract_uint64
frame_bury 7
frame_dig 0
pushint 54 // 54
extract_uint64
frame_bury 8
frame_dig 0
frame_dig 0
pushint 62 // 62
extract_uint16
dig 1
len
substring3
frame_bury 9
frame_dig 0
pushint 832 // 832
getbit
frame_bury 10
frame_dig -2
gtxns Amount
frame_dig 5
>
// The new bid must be larger than the current highest bid
assert
frame_dig -2
gtxns Amount
frame_dig 6
>
// The new bid must be greater that the minimum bid price
assert
frame_dig -2
gtxns Amount
frame_bury 5
frame_dig -1
frame_bury 14
frame_dig 14
frame_bury 13
pushint 105 // 105
frame_bury 11
frame_dig 11
frame_dig 14
len
+
frame_bury 12
frame_dig 12
intc_2 // 65536
<
assert
frame_dig 11
itob
extract 6 0
frame_dig 1
concat
frame_dig 2
frame_bury 14
frame_dig 13
frame_dig 14
concat
frame_bury 13
frame_dig 12
frame_bury 11
frame_dig 11
frame_dig 14
len
+
frame_bury 12
frame_dig 12
intc_2 // 65536
<
assert
frame_dig 11
itob
extract 6 0
concat
frame_dig 3
frame_bury 14
frame_dig 13
frame_dig 14
concat
frame_bury 13
frame_dig 12
frame_bury 11
frame_dig 11
frame_dig 14
len
+
frame_bury 12
frame_dig 12
intc_2 // 65536
<
assert
frame_dig 11
itob
extract 6 0
concat
frame_dig 6
itob
concat
frame_dig 7
itob
concat
frame_dig 8
itob
concat
frame_dig 9
frame_bury 14
frame_dig 13
frame_dig 14
concat
frame_bury 13
frame_dig 12
frame_bury 11
frame_dig 11
itob
extract 6 0
concat
frame_dig 5
itob
concat
frame_dig 4
concat
bytec_1 // 0x00
intc_0 // 0
frame_dig 10
setbit
concat
frame_dig 13
concat
frame_bury 0
frame_dig -1
extract 2 0
box_del
pop
frame_dig -1
extract 2 0
frame_dig 0
box_put
retsub

// update_art_nft_owner
updateartnftowner_24:
proto 2 0
bytec_0 // ""
intc_0 // 0
bytec_0 // ""
dupn 4
intc_0 // 0
dup
bytec_0 // ""
intc_0 // 0
dupn 3
bytec_0 // ""
dup
frame_dig -2
extract 2 0
box_get
store 78
store 77
load 78
assert
load 77
frame_bury 0
frame_dig 0
intc_0 // 0
extract_uint64
frame_bury 1
frame_dig 0
frame_dig 0
pushint 8 // 8
extract_uint16
frame_dig 0
pushint 10 // 10
extract_uint16
substring3
frame_bury 2
frame_dig 0
frame_dig 0
pushint 10 // 10
extract_uint16
frame_dig 0
pushint 12 // 12
extract_uint16
substring3
frame_bury 3
frame_dig 0
frame_dig 0
pushint 12 // 12
extract_uint16
frame_dig 0
pushint 14 // 14
extract_uint16
substring3
frame_bury 4
frame_dig 0
frame_dig 0
pushint 14 // 14
extract_uint16
frame_dig 0
pushint 16 // 16
extract_uint16
substring3
frame_bury 5
frame_dig 0
frame_dig 0
pushint 16 // 16
extract_uint16
dig 1
len
substring3
frame_bury 6
frame_dig 0
pushint 18 // 18
extract_uint64
frame_bury 7
frame_dig 0
pushint 26 // 26
extract_uint64
frame_bury 8
frame_dig 0
extract 34 32
frame_bury 9
frame_dig 0
intc 5 // 784
getbit
frame_bury 10
frame_dig 0
intc 6 // 785
getbit
frame_bury 11
frame_dig 1
itob
frame_dig 2
frame_bury 15
frame_dig 15
frame_bury 14
pushint 99 // 99
frame_bury 12
frame_dig 12
frame_dig 15
len
+
frame_bury 13
frame_dig 13
intc_2 // 65536
<
assert
frame_dig 12
itob
extract 6 0
concat
frame_dig 3
frame_bury 15
frame_dig 14
frame_dig 15
concat
frame_bury 14
frame_dig 13
frame_bury 12
frame_dig 12
frame_dig 15
len
+
frame_bury 13
frame_dig 13
intc_2 // 65536
<
assert
frame_dig 12
itob
extract 6 0
concat
frame_dig 4
frame_bury 15
frame_dig 14
frame_dig 15
concat
frame_bury 14
frame_dig 13
frame_bury 12
frame_dig 12
frame_dig 15
len
+
frame_bury 13
frame_dig 13
intc_2 // 65536
<
assert
frame_dig 12
itob
extract 6 0
concat
frame_dig 5
frame_bury 15
frame_dig 14
frame_dig 15
concat
frame_bury 14
frame_dig 13
frame_bury 12
frame_dig 12
frame_dig 15
len
+
frame_bury 13
frame_dig 13
intc_2 // 65536
<
assert
frame_dig 12
itob
extract 6 0
concat
frame_dig 6
frame_bury 15
frame_dig 14
frame_dig 15
concat
frame_bury 14
frame_dig 13
frame_bury 12
frame_dig 12
itob
extract 6 0
concat
frame_dig 7
itob
concat
frame_dig 8
itob
concat
frame_dig 9
concat
frame_dig -1
concat
bytec_1 // 0x00
intc_0 // 0
frame_dig 10
setbit
intc_1 // 1
frame_dig 11
setbit
concat
frame_dig 14
concat
frame_bury 0
frame_dig 2
extract 2 0
box_del
pop
frame_dig 2
extract 2 0
frame_dig 0
box_put
retsub

// register_creator_caster
registercreatorcaster_25:
proto 0 0
bytec_0 // ""
intc_0 // 0
bytec_0 // ""
dup
txna ApplicationArgs 1
frame_bury 2
txna ApplicationArgs 2
frame_bury 3
txn GroupIndex
intc_1 // 1
-
frame_bury 1
frame_dig 1
frame_dig 2
frame_dig 3
callsub registercreator_6
frame_bury 0
bytec_2 // 0x151f7c75
frame_dig 0
concat
log
retsub

// send_aura_token
sendauratoken_26:
proto 2 0
bytec_0 // ""
dup
intc_0 // 0
dupn 3
bytec_0 // ""
dup
callsub ensureaurasexist_30
bytec_3 // 0x000461757261
frame_bury 0
frame_dig 0
extract 2 0
box_get
store 28
store 27
load 28
assert
load 27
frame_bury 1
frame_dig 1
intc_0 // 0
extract_uint64
frame_bury 2
frame_dig 1
pushint 10 // 10
extract_uint64
frame_bury 3
frame_dig 3
intc_1 // 1
>
// Not enough aura tokens
assert
itxn_begin
pushint 4 // axfer
itxn_field TypeEnum
frame_dig 2
itxn_field XferAsset
frame_dig -2
itxn_field AssetReceiver
frame_dig -1
itxn_field AssetAmount
itxn_submit
frame_dig 3
intc_1 // 1
-
frame_bury 3
frame_dig 2
itob
frame_dig 0
frame_bury 7
frame_dig 7
frame_bury 6
pushint 18 // 18
frame_bury 4
frame_dig 4
itob
extract 6 0
concat
frame_dig 3
itob
concat
frame_dig 6
concat
frame_bury 1
frame_dig 0
extract 2 0
box_del
pop
frame_dig 0
extract 2 0
frame_dig 1
box_put
retsub

// transfer_asset_from_contract
transferassetfromcontract_27:
proto 3 0
itxn_begin
pushint 4 // axfer
itxn_field TypeEnum
frame_dig -3
itxn_field XferAsset
frame_dig -2
itxn_field AssetAmount
frame_dig -1
itxn_field AssetReceiver
itxn_submit
retsub

// refund_last_bidder
refundlastbidder_28:
proto 3 0
itxn_begin
intc_1 // pay
itxn_field TypeEnum
frame_dig -2
itxn_field Amount
frame_dig -3
txnas Accounts
itxn_field Receiver
frame_dig -1
extract 2 0
itxn_field Note
itxn_submit
retsub

// ensure_zero_payment
ensurezeropayment_29:
proto 1 0
frame_dig -1
gtxns Amount
intc_0 // 0
==
// Payment amount must be 0
assert
retsub

// ensure_auras_exist
ensureaurasexist_30:
proto 0 0
bytec 5 // "aura"
box_len
store 30
store 29
load 30
// aura tokens have not been created yet
assert
retsub

// ensure_asset_is_aura
ensureassetisaura_31:
proto 1 0
bytec_0 // ""
intc_0 // 0
bytec 5 // "aura"
box_get
store 32
store 31
load 32
assert
load 31
frame_bury 0
frame_dig 0
intc_0 // 0
extract_uint64
frame_bury 1
frame_dig -1
txnas Assets
frame_dig 1
==
// The asset is not an aura token
assert
retsub

// ensure_art_auction_exists
ensureartauctionexists_32:
proto 1 0
frame_dig -1
extract 2 0
box_len
store 70
store 69
load 70
// art auction with the specified key does not exist
assert
retsub

// ensure_sound_nft_exists
ensuresoundnftexists_33:
proto 1 0
frame_dig -1
extract 2 0
box_len
store 42
store 41
load 42
// SoundNFT with specified key does not exist
assert
retsub

// ensure_art_nft_exists
ensureartnftexists_34:
proto 1 0
frame_dig -1
extract 2 0
box_len
store 52
store 51
load 52
// ArtNFT with specified key does not exist
assert
retsub

// ensure_registered_creative
ensureregisteredcreative_35:
proto 2 0
bytec_0 // ""
intc_0 // 0
dupn 2
bytec_0 // ""
dup
intc_0 // 0
dupn 3
bytec_0 // ""
dup
frame_dig -2
gtxns Sender
box_len
store 34
store 33
load 34
// Account is not a registered creative
assert
frame_dig -2
gtxns Sender
box_get
store 36
store 35
load 36
assert
load 35
frame_bury 0
frame_dig 0
intc_0 // 0
getbit
frame_bury 1
frame_dig 0
intc_1 // 1
getbit
frame_bury 2
frame_dig 0
intc_1 // 1
extract_uint64
frame_bury 3
frame_dig 0
frame_dig 0
pushint 9 // 9
extract_uint16
frame_dig 0
pushint 11 // 11
extract_uint16
substring3
frame_bury 4
frame_dig 0
frame_dig 0
pushint 11 // 11
extract_uint16
dig 1
len
substring3
frame_bury 5
frame_dig 0
pushint 13 // 13
extract_uint64
frame_bury 6
frame_dig 0
intc 4 // 168
getbit
frame_bury 7
frame_dig -1
extract 2 0
pushbytes 0x6d75736963 // "music"
==
bnz ensureregisteredcreative_35_l3
ensureregisteredcreative_35_l1:
frame_dig -1
extract 2 0
pushbytes 0x617274 // "art"
==
bz ensureregisteredcreative_35_l4
intc_1 // 1
frame_bury 1
b ensureregisteredcreative_35_l4
ensureregisteredcreative_35_l3:
intc_1 // 1
frame_bury 1
b ensureregisteredcreative_35_l1
ensureregisteredcreative_35_l4:
bytec_1 // 0x00
intc_0 // 0
frame_dig 1
setbit
intc_1 // 1
frame_dig 2
setbit
frame_dig 3
itob
concat
frame_dig 4
frame_bury 11
frame_dig 11
frame_bury 10
pushint 22 // 22
frame_bury 8
frame_dig 8
frame_dig 11
len
+
frame_bury 9
frame_dig 9
intc_2 // 65536
<
assert
frame_dig 8
itob
extract 6 0
concat
frame_dig 5
frame_bury 11
frame_dig 10
frame_dig 11
concat
frame_bury 10
frame_dig 9
frame_bury 8
frame_dig 8
itob
extract 6 0
concat
frame_dig 6
itob
concat
bytec_1 // 0x00
intc_0 // 0
frame_dig 7
setbit
concat
frame_dig 10
concat
frame_bury 0
frame_dig -2
gtxns Sender
box_del
pop
frame_dig -2
gtxns Sender
frame_dig 0
box_put
retsub

// create_sound_nft_caster
createsoundnftcaster_36:
proto 0 0
bytec_0 // ""
intc_0 // 0
bytec_0 // ""
dupn 4
intc_0 // 0
bytec_0 // ""
intc_0 // 0
bytec_0 // ""
dupn 2
intc_0 // 0
dupn 2
txna ApplicationArgs 1
frame_bury 2
txna ApplicationArgs 2
frame_bury 3
txna ApplicationArgs 3
frame_bury 4
txna ApplicationArgs 4
frame_bury 5
txna ApplicationArgs 5
frame_bury 6
txna ApplicationArgs 6
btoi
frame_bury 7
txna ApplicationArgs 7
frame_bury 8
txna ApplicationArgs 8
btoi
frame_bury 9
txna ApplicationArgs 9
frame_bury 10
txna ApplicationArgs 10
frame_bury 11
txna ApplicationArgs 11
frame_bury 12
txna ApplicationArgs 12
btoi
frame_bury 13
txna ApplicationArgs 13
intc_0 // 0
getbyte
frame_bury 14
txna ApplicationArgs 14
intc_0 // 0
getbyte
frame_bury 15
txn GroupIndex
intc_1 // 1
-
frame_bury 1
frame_dig 1
gtxns TypeEnum
intc_1 // pay
==
assert
frame_dig 1
frame_dig 2
frame_dig 3
frame_dig 4
frame_dig 5
frame_dig 6
frame_dig 7
frame_dig 8
frame_dig 9
frame_dig 10
frame_dig 11
frame_dig 12
frame_dig 13
frame_dig 14
frame_dig 15
callsub createsoundnft_7
frame_bury 0
bytec_2 // 0x151f7c75
frame_dig 0
concat
log
retsub

// claim_created_sound_caster
claimcreatedsoundcaster_37:
proto 0 0
bytec_0 // ""
intc_0 // 0
bytec_0 // ""
intc_0 // 0
dup
txna ApplicationArgs 1
frame_bury 2
txna ApplicationArgs 2
intc_0 // 0
getbyte
frame_bury 3
txna ApplicationArgs 3
intc_0 // 0
getbyte
frame_bury 4
txn GroupIndex
intc_1 // 1
-
frame_bury 1
frame_dig 1
gtxns TypeEnum
pushint 4 // axfer
==
assert
frame_dig 1
frame_dig 2
frame_dig 3
frame_dig 4
callsub claimcreatedsound_8
frame_bury 0
bytec_2 // 0x151f7c75
frame_dig 0
concat
log
retsub

// create_art_nft_caster
createartnftcaster_38:
proto 0 0
bytec_0 // ""
intc_0 // 0
bytec_0 // ""
dupn 5
intc_0 // 0
dupn 2
txna ApplicationArgs 1
frame_bury 2
txna ApplicationArgs 2
frame_bury 3
txna ApplicationArgs 3
frame_bury 4
txna ApplicationArgs 4
frame_bury 5
txna ApplicationArgs 5
frame_bury 6
txna ApplicationArgs 6
frame_bury 7
txna ApplicationArgs 7
btoi
frame_bury 8
txna ApplicationArgs 8
intc_0 // 0
getbyte
frame_bury 9
txna ApplicationArgs 9
intc_0 // 0
getbyte
frame_bury 10
txn GroupIndex
intc_1 // 1
-
frame_bury 1
frame_dig 1
gtxns TypeEnum
intc_1 // pay
==
assert
frame_dig 1
frame_dig 2
frame_dig 3
frame_dig 4
frame_dig 5
frame_dig 6
frame_dig 7
frame_dig 8
frame_dig 9
frame_dig 10
callsub createartnft_9
frame_bury 0
bytec_2 // 0x151f7c75
frame_dig 0
concat
log
retsub

// claim_created_art_caster
claimcreatedartcaster_39:
proto 0 0
bytec_0 // ""
intc_0 // 0
bytec_0 // ""
intc_0 // 0
dup
txna ApplicationArgs 1
frame_bury 2
txna ApplicationArgs 2
intc_0 // 0
getbyte
frame_bury 3
txna ApplicationArgs 3
intc_0 // 0
getbyte
frame_bury 4
txn GroupIndex
intc_1 // 1
-
frame_bury 1
frame_dig 1
gtxns TypeEnum
pushint 4 // axfer
==
assert
frame_dig 1
frame_dig 2
frame_dig 3
frame_dig 4
callsub claimcreatedart_10
frame_bury 0
bytec_2 // 0x151f7c75
frame_dig 0
concat
log
retsub

// create_art_auction_caster
createartauctioncaster_40:
proto 0 0
bytec_0 // ""
intc_0 // 0
bytec_0 // ""
dup
intc_0 // 0
dupn 2
bytec_0 // ""
txna ApplicationArgs 1
frame_bury 2
txna ApplicationArgs 2
frame_bury 3
txna ApplicationArgs 3
btoi
frame_bury 4
txna ApplicationArgs 4
btoi
frame_bury 5
txna ApplicationArgs 5
btoi
frame_bury 6
txna ApplicationArgs 6
frame_bury 7
txn GroupIndex
intc_1 // 1
-
frame_bury 1
frame_dig 1
gtxns TypeEnum
intc_1 // pay
==
assert
frame_dig 1
frame_dig 2
frame_dig 3
frame_dig 4
frame_dig 5
frame_dig 6
frame_dig 7
callsub createartauction_11
frame_bury 0
bytec_2 // 0x151f7c75
frame_dig 0
concat
log
retsub

// bid_on_art_auction_caster
bidonartauctioncaster_41:
proto 0 0
bytec_0 // ""
intc_0 // 0
bytec_0 // ""
intc_0 // 0
txna ApplicationArgs 1
frame_bury 2
txna ApplicationArgs 2
intc_0 // 0
getbyte
frame_bury 3
txn GroupIndex
intc_1 // 1
-
frame_bury 1
frame_dig 1
gtxns TypeEnum
intc_1 // pay
==
assert
frame_dig 1
frame_dig 2
frame_dig 3
callsub bidonartauction_12
frame_bury 0
bytec_2 // 0x151f7c75
frame_dig 0
concat
log
retsub

// complete_art_auction_caster
completeartauctioncaster_42:
proto 0 0
bytec_0 // ""
intc_0 // 0
dup
bytec_0 // ""
txna ApplicationArgs 1
frame_bury 3
txn GroupIndex
pushint 2 // 2
-
frame_bury 1
frame_dig 1
gtxns TypeEnum
pushint 4 // axfer
==
assert
txn GroupIndex
intc_1 // 1
-
frame_bury 2
frame_dig 2
gtxns TypeEnum
pushint 4 // axfer
==
assert
frame_dig 1
frame_dig 2
frame_dig 3
callsub completeartauction_13
frame_bury 0
bytec_2 // 0x151f7c75
frame_dig 0
concat
log
retsub