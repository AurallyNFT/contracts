{
    "hints": {
        "create_aura_tokens()(uint64,string,uint64,bool)": {
            "structs": {
                "output": {
                    "name": "AurallyToken",
                    "elements": [
                        [
                            "asset_id",
                            "uint64"
                        ],
                        [
                            "asset_key",
                            "string"
                        ],
                        [
                            "asset_total",
                            "uint64"
                        ],
                        [
                            "claimed",
                            "bool"
                        ]
                    ]
                }
            },
            "call_config": {
                "no_op": "CALL"
            }
        },
        "claim_aura_percentage(account)(uint64,string,uint64,bool)": {
            "structs": {
                "output": {
                    "name": "AurallyToken",
                    "elements": [
                        [
                            "asset_id",
                            "uint64"
                        ],
                        [
                            "asset_key",
                            "string"
                        ],
                        [
                            "asset_total",
                            "uint64"
                        ],
                        [
                            "claimed",
                            "bool"
                        ]
                    ]
                }
            },
            "call_config": {
                "no_op": "CALL"
            }
        },
        "update_scalling_constant(uint64)uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "update_epoch_target(uint64)uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "update_aura_rewards()uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "register_creator(txn,string,string,string)(bool,bool,uint64,string,string,string,uint64)": {
            "structs": {
                "output": {
                    "name": "AurallyCreative",
                    "elements": [
                        [
                            "is_music_creative",
                            "bool"
                        ],
                        [
                            "is_art_creative",
                            "bool"
                        ],
                        [
                            "minted",
                            "uint64"
                        ],
                        [
                            "image_url",
                            "string"
                        ],
                        [
                            "fullname",
                            "string"
                        ],
                        [
                            "username",
                            "string"
                        ],
                        [
                            "d_nft_id",
                            "uint64"
                        ]
                    ]
                }
            },
            "call_config": {
                "no_op": "CALL"
            }
        },
        "create_sound_nft(pay,string,string,string,string,string,uint64,string,string,uint64,string,string,string,uint64,asset,account)(uint64,string,uint64,string,string,string,uint64,string,string,uint64,string,string,string,address,bool,bool)": {
            "structs": {
                "output": {
                    "name": "SoundNFT",
                    "elements": [
                        [
                            "asset_id",
                            "uint64"
                        ],
                        [
                            "asset_key",
                            "string"
                        ],
                        [
                            "supply",
                            "uint64"
                        ],
                        [
                            "title",
                            "string"
                        ],
                        [
                            "label",
                            "string"
                        ],
                        [
                            "artist",
                            "string"
                        ],
                        [
                            "release_date",
                            "uint64"
                        ],
                        [
                            "genre",
                            "string"
                        ],
                        [
                            "description",
                            "string"
                        ],
                        [
                            "price",
                            "uint64"
                        ],
                        [
                            "cover_image_url",
                            "string"
                        ],
                        [
                            "audio_sample_url",
                            "string"
                        ],
                        [
                            "full_track_url",
                            "string"
                        ],
                        [
                            "creator",
                            "address"
                        ],
                        [
                            "for_sale",
                            "bool"
                        ],
                        [
                            "claimed",
                            "bool"
                        ]
                    ]
                }
            },
            "call_config": {
                "no_op": "CALL"
            }
        },
        "claim_created_sound(axfer,string,account,asset)(uint64,string,uint64,string,string,string,uint64,string,string,uint64,string,string,string,address,bool,bool)": {
            "structs": {
                "output": {
                    "name": "SoundNFT",
                    "elements": [
                        [
                            "asset_id",
                            "uint64"
                        ],
                        [
                            "asset_key",
                            "string"
                        ],
                        [
                            "supply",
                            "uint64"
                        ],
                        [
                            "title",
                            "string"
                        ],
                        [
                            "label",
                            "string"
                        ],
                        [
                            "artist",
                            "string"
                        ],
                        [
                            "release_date",
                            "uint64"
                        ],
                        [
                            "genre",
                            "string"
                        ],
                        [
                            "description",
                            "string"
                        ],
                        [
                            "price",
                            "uint64"
                        ],
                        [
                            "cover_image_url",
                            "string"
                        ],
                        [
                            "audio_sample_url",
                            "string"
                        ],
                        [
                            "full_track_url",
                            "string"
                        ],
                        [
                            "creator",
                            "address"
                        ],
                        [
                            "for_sale",
                            "bool"
                        ],
                        [
                            "claimed",
                            "bool"
                        ]
                    ]
                }
            },
            "call_config": {
                "no_op": "CALL"
            }
        },
        "create_art_nft(pay,string,string,string,string,string,string,uint64,asset,account)(uint64,string,string,string,string,string,uint64,uint64,address,address,bool,bool)": {
            "structs": {
                "output": {
                    "name": "ArtNFT",
                    "elements": [
                        [
                            "asset_id",
                            "uint64"
                        ],
                        [
                            "asset_key",
                            "string"
                        ],
                        [
                            "title",
                            "string"
                        ],
                        [
                            "name",
                            "string"
                        ],
                        [
                            "description",
                            "string"
                        ],
                        [
                            "image_url",
                            "string"
                        ],
                        [
                            "price",
                            "uint64"
                        ],
                        [
                            "sold_price",
                            "uint64"
                        ],
                        [
                            "creator",
                            "address"
                        ],
                        [
                            "owner",
                            "address"
                        ],
                        [
                            "for_sale",
                            "bool"
                        ],
                        [
                            "claimed",
                            "bool"
                        ]
                    ]
                }
            },
            "call_config": {
                "no_op": "CALL"
            }
        },
        "claim_created_art(axfer,string,account,asset)(uint64,string,string,string,string,string,uint64,uint64,address,address,bool,bool)": {
            "structs": {
                "output": {
                    "name": "ArtNFT",
                    "elements": [
                        [
                            "asset_id",
                            "uint64"
                        ],
                        [
                            "asset_key",
                            "string"
                        ],
                        [
                            "title",
                            "string"
                        ],
                        [
                            "name",
                            "string"
                        ],
                        [
                            "description",
                            "string"
                        ],
                        [
                            "image_url",
                            "string"
                        ],
                        [
                            "price",
                            "uint64"
                        ],
                        [
                            "sold_price",
                            "uint64"
                        ],
                        [
                            "creator",
                            "address"
                        ],
                        [
                            "owner",
                            "address"
                        ],
                        [
                            "for_sale",
                            "bool"
                        ],
                        [
                            "claimed",
                            "bool"
                        ]
                    ]
                }
            },
            "call_config": {
                "no_op": "CALL"
            }
        },
        "create_art_auction(pay,string,string,uint64,uint64,uint64,string)(string,address,string,string,uint64,uint64,uint64,string,uint64,address,bool)": {
            "structs": {
                "output": {
                    "name": "ArtAuctionItem",
                    "elements": [
                        [
                            "auction_key",
                            "string"
                        ],
                        [
                            "auctioneer",
                            "address"
                        ],
                        [
                            "item_asset_key",
                            "string"
                        ],
                        [
                            "item_name",
                            "string"
                        ],
                        [
                            "min_bid",
                            "uint64"
                        ],
                        [
                            "starts_at",
                            "uint64"
                        ],
                        [
                            "ends_at",
                            "uint64"
                        ],
                        [
                            "description",
                            "string"
                        ],
                        [
                            "highest_bid",
                            "uint64"
                        ],
                        [
                            "highest_bidder",
                            "address"
                        ],
                        [
                            "closed",
                            "bool"
                        ]
                    ]
                }
            },
            "call_config": {
                "no_op": "CALL"
            }
        },
        "bid_on_art_auction(string,pay,account,axfer,axfer)(string,address,string,string,uint64,uint64,uint64,string,uint64,address,bool)": {
            "structs": {
                "output": {
                    "name": "ArtAuctionItem",
                    "elements": [
                        [
                            "auction_key",
                            "string"
                        ],
                        [
                            "auctioneer",
                            "address"
                        ],
                        [
                            "item_asset_key",
                            "string"
                        ],
                        [
                            "item_name",
                            "string"
                        ],
                        [
                            "min_bid",
                            "uint64"
                        ],
                        [
                            "starts_at",
                            "uint64"
                        ],
                        [
                            "ends_at",
                            "uint64"
                        ],
                        [
                            "description",
                            "string"
                        ],
                        [
                            "highest_bid",
                            "uint64"
                        ],
                        [
                            "highest_bidder",
                            "address"
                        ],
                        [
                            "closed",
                            "bool"
                        ]
                    ]
                }
            },
            "call_config": {
                "no_op": "CALL"
            }
        },
        "complete_art_auction(axfer,asset,string,account)(uint64,string,string,string,string,string,uint64,uint64,address,address,bool,bool)": {
            "structs": {
                "output": {
                    "name": "ArtNFT",
                    "elements": [
                        [
                            "asset_id",
                            "uint64"
                        ],
                        [
                            "asset_key",
                            "string"
                        ],
                        [
                            "title",
                            "string"
                        ],
                        [
                            "name",
                            "string"
                        ],
                        [
                            "description",
                            "string"
                        ],
                        [
                            "image_url",
                            "string"
                        ],
                        [
                            "price",
                            "uint64"
                        ],
                        [
                            "sold_price",
                            "uint64"
                        ],
                        [
                            "creator",
                            "address"
                        ],
                        [
                            "owner",
                            "address"
                        ],
                        [
                            "for_sale",
                            "bool"
                        ],
                        [
                            "claimed",
                            "bool"
                        ]
                    ]
                }
            },
            "call_config": {
                "no_op": "CALL"
            }
        },
        "place_nft_on_sale(axfer,string,string,uint64,string)(string,string,uint64,string,uint64,uint64,address)": {
            "structs": {
                "output": {
                    "name": "FixedAssetSale",
                    "elements": [
                        [
                            "sale_key",
                            "string"
                        ],
                        [
                            "asset_key",
                            "string"
                        ],
                        [
                            "asset_id",
                            "uint64"
                        ],
                        [
                            "asset_type",
                            "string"
                        ],
                        [
                            "price",
                            "uint64"
                        ],
                        [
                            "supply",
                            "uint64"
                        ],
                        [
                            "seller",
                            "address"
                        ]
                    ]
                }
            },
            "call_config": {
                "no_op": "CALL"
            }
        },
        "purchase_nft(pay,axfer,string,string,account,asset,asset,axfer)(string,string,uint64,string,uint64,uint64,address)": {
            "structs": {
                "output": {
                    "name": "FixedAssetSale",
                    "elements": [
                        [
                            "sale_key",
                            "string"
                        ],
                        [
                            "asset_key",
                            "string"
                        ],
                        [
                            "asset_id",
                            "uint64"
                        ],
                        [
                            "asset_type",
                            "string"
                        ],
                        [
                            "price",
                            "uint64"
                        ],
                        [
                            "supply",
                            "uint64"
                        ],
                        [
                            "seller",
                            "address"
                        ]
                    ]
                }
            },
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDgKcHVzaGludCAwIC8vIDAKcmV0dXJu"
    },
    "state": {
        "global": {
            "num_byte_slices": 0,
            "num_uints": 9
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {
                "aura_base_reward": {
                    "type": "uint64",
                    "key": "aura_base_reward",
                    "descr": ""
                },
                "aura_reward": {
                    "type": "uint64",
                    "key": "aura_reward",
                    "descr": ""
                },
                "epoch_nft_transactions": {
                    "type": "uint64",
                    "key": "epoch_nft_transactions",
                    "descr": ""
                },
                "epoch_target_transaction": {
                    "type": "uint64",
                    "key": "epoch_target_transaction",
                    "descr": ""
                },
                "network_difficulty": {
                    "type": "uint64",
                    "key": "network_difficulty",
                    "descr": ""
                },
                "rewardable_tokens_supply": {
                    "type": "uint64",
                    "key": "rewardable_tokens_supply",
                    "descr": ""
                },
                "scaling_constant": {
                    "type": "uint64",
                    "key": "scaling_constant",
                    "descr": ""
                },
                "total_aurally_tokens": {
                    "type": "uint64",
                    "key": "total_aurally_tokens",
                    "descr": ""
                },
                "total_nft_transactions": {
                    "type": "uint64",
                    "key": "total_nft_transactions",
                    "descr": ""
                }
            },
            "reserved": {}
        },
        "local": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "Aurally_NFT",
        "methods": [
            {
                "name": "create_aura_tokens",
                "args": [],
                "returns": {
                    "type": "(uint64,string,uint64,bool)"
                }
            },
            {
                "name": "claim_aura_percentage",
                "args": [
                    {
                        "type": "account",
                        "name": "percent_reciever"
                    }
                ],
                "returns": {
                    "type": "(uint64,string,uint64,bool)"
                }
            },
            {
                "name": "update_scalling_constant",
                "args": [
                    {
                        "type": "uint64",
                        "name": "constant"
                    }
                ],
                "returns": {
                    "type": "uint64"
                }
            },
            {
                "name": "update_epoch_target",
                "args": [
                    {
                        "type": "uint64",
                        "name": "target"
                    }
                ],
                "returns": {
                    "type": "uint64"
                }
            },
            {
                "name": "update_aura_rewards",
                "args": [],
                "returns": {
                    "type": "uint64"
                }
            },
            {
                "name": "register_creator",
                "args": [
                    {
                        "type": "txn",
                        "name": "txn"
                    },
                    {
                        "type": "string",
                        "name": "fullname"
                    },
                    {
                        "type": "string",
                        "name": "image_url"
                    },
                    {
                        "type": "string",
                        "name": "username"
                    }
                ],
                "returns": {
                    "type": "(bool,bool,uint64,string,string,string,uint64)"
                }
            },
            {
                "name": "create_sound_nft",
                "args": [
                    {
                        "type": "pay",
                        "name": "txn"
                    },
                    {
                        "type": "string",
                        "name": "nft_name"
                    },
                    {
                        "type": "string",
                        "name": "asset_key"
                    },
                    {
                        "type": "string",
                        "name": "title"
                    },
                    {
                        "type": "string",
                        "name": "label"
                    },
                    {
                        "type": "string",
                        "name": "artist"
                    },
                    {
                        "type": "uint64",
                        "name": "release_date"
                    },
                    {
                        "type": "string",
                        "name": "genre"
                    },
                    {
                        "type": "string",
                        "name": "description"
                    },
                    {
                        "type": "uint64",
                        "name": "price"
                    },
                    {
                        "type": "string",
                        "name": "cover_image_ipfs"
                    },
                    {
                        "type": "string",
                        "name": "audio_sample_ipfs"
                    },
                    {
                        "type": "string",
                        "name": "full_track_ipfs"
                    },
                    {
                        "type": "uint64",
                        "name": "supply"
                    },
                    {
                        "type": "asset",
                        "name": "aura"
                    },
                    {
                        "type": "account",
                        "name": "creator"
                    }
                ],
                "returns": {
                    "type": "(uint64,string,uint64,string,string,string,uint64,string,string,uint64,string,string,string,address,bool,bool)"
                }
            },
            {
                "name": "claim_created_sound",
                "args": [
                    {
                        "type": "axfer",
                        "name": "txn"
                    },
                    {
                        "type": "string",
                        "name": "asset_key"
                    },
                    {
                        "type": "account",
                        "name": "reciever"
                    },
                    {
                        "type": "asset",
                        "name": "asset"
                    }
                ],
                "returns": {
                    "type": "(uint64,string,uint64,string,string,string,uint64,string,string,uint64,string,string,string,address,bool,bool)"
                }
            },
            {
                "name": "create_art_nft",
                "args": [
                    {
                        "type": "pay",
                        "name": "txn"
                    },
                    {
                        "type": "string",
                        "name": "asset_key"
                    },
                    {
                        "type": "string",
                        "name": "nft_name"
                    },
                    {
                        "type": "string",
                        "name": "title"
                    },
                    {
                        "type": "string",
                        "name": "name"
                    },
                    {
                        "type": "string",
                        "name": "description"
                    },
                    {
                        "type": "string",
                        "name": "ipfs_location"
                    },
                    {
                        "type": "uint64",
                        "name": "price"
                    },
                    {
                        "type": "asset",
                        "name": "aura"
                    },
                    {
                        "type": "account",
                        "name": "creator"
                    }
                ],
                "returns": {
                    "type": "(uint64,string,string,string,string,string,uint64,uint64,address,address,bool,bool)"
                }
            },
            {
                "name": "claim_created_art",
                "args": [
                    {
                        "type": "axfer",
                        "name": "txn"
                    },
                    {
                        "type": "string",
                        "name": "asset_key"
                    },
                    {
                        "type": "account",
                        "name": "reciever"
                    },
                    {
                        "type": "asset",
                        "name": "asset"
                    }
                ],
                "returns": {
                    "type": "(uint64,string,string,string,string,string,uint64,uint64,address,address,bool,bool)"
                }
            },
            {
                "name": "create_art_auction",
                "args": [
                    {
                        "type": "pay",
                        "name": "txn"
                    },
                    {
                        "type": "string",
                        "name": "auction_key"
                    },
                    {
                        "type": "string",
                        "name": "asset_key"
                    },
                    {
                        "type": "uint64",
                        "name": "min_bid"
                    },
                    {
                        "type": "uint64",
                        "name": "starts_at"
                    },
                    {
                        "type": "uint64",
                        "name": "ends_at"
                    },
                    {
                        "type": "string",
                        "name": "description"
                    }
                ],
                "returns": {
                    "type": "(string,address,string,string,uint64,uint64,uint64,string,uint64,address,bool)"
                }
            },
            {
                "name": "bid_on_art_auction",
                "args": [
                    {
                        "type": "string",
                        "name": "auction_key"
                    },
                    {
                        "type": "pay",
                        "name": "txn"
                    },
                    {
                        "type": "account",
                        "name": "current_highest_bidder"
                    },
                    {
                        "type": "axfer",
                        "name": "optin_txn"
                    },
                    {
                        "type": "axfer",
                        "name": "aura_optin_txn"
                    }
                ],
                "returns": {
                    "type": "(string,address,string,string,uint64,uint64,uint64,string,uint64,address,bool)"
                }
            },
            {
                "name": "complete_art_auction",
                "args": [
                    {
                        "type": "axfer",
                        "name": "txn"
                    },
                    {
                        "type": "asset",
                        "name": "aura"
                    },
                    {
                        "type": "string",
                        "name": "auction_key"
                    },
                    {
                        "type": "account",
                        "name": "highest_bidder_account"
                    }
                ],
                "returns": {
                    "type": "(uint64,string,string,string,string,string,uint64,uint64,address,address,bool,bool)"
                }
            },
            {
                "name": "place_nft_on_sale",
                "args": [
                    {
                        "type": "axfer",
                        "name": "txn"
                    },
                    {
                        "type": "string",
                        "name": "asset_key"
                    },
                    {
                        "type": "string",
                        "name": "asset_type"
                    },
                    {
                        "type": "uint64",
                        "name": "sale_price"
                    },
                    {
                        "type": "string",
                        "name": "sale_key"
                    }
                ],
                "returns": {
                    "type": "(string,string,uint64,string,uint64,uint64,address)"
                }
            },
            {
                "name": "purchase_nft",
                "args": [
                    {
                        "type": "pay",
                        "name": "txn"
                    },
                    {
                        "type": "axfer",
                        "name": "optin_txn"
                    },
                    {
                        "type": "string",
                        "name": "sale_key"
                    },
                    {
                        "type": "string",
                        "name": "asset_type"
                    },
                    {
                        "type": "account",
                        "name": "buyer"
                    },
                    {
                        "type": "asset",
                        "name": "asset"
                    },
                    {
                        "type": "asset",
                        "name": "aura"
                    },
                    {
                        "type": "axfer",
                        "name": "aura_optin_txn"
                    }
                ],
                "returns": {
                    "type": "(string,string,uint64,string,uint64,uint64,address)"
                }
            }
        ],
        "networks": {}
    },
    "bare_call_config": {
        "delete_application": "CALL",
        "no_op": "CREATE",
        "update_application": "CALL"
    }
}